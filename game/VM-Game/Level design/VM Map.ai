%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Dean Myatt, Jr.) ()%%Title: (VM Map.ai)%%CreationDate: 04/02/2011 14:34%%Canvassize: 16383%%BoundingBox: -1 -1 801 1455%%HiResBoundingBox: -0.5 -0.5 800.5 1454.9795%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 400.5 299.5 400.5 299.5%AI3_TileBox: -3 20.5 780 579.5%AI3_DocumentPreview: None%AI5_ArtSize: 800 600%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -162.333 657 1.5 1848 989 18 0 0 66 129 1 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 72 128 8%%BeginData: 4634 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD50FFA8FD8FFFA8FD8FFFA8FD8FFFA8FD8FFFA8FD8FFFA8FDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD3FFFFD0B7DA8FD13%7DA8FD077DA8FD0B7DA8FD137DFF7D7DA87DA87DA87DA87DA8A8A87DA87D%A87DA87D7D7DA87DA87DA87DA87DA8A8A87DA87DA87DA8A87D7DA87DA87D%A87DA87DA8A8A87DA87DA87DA87D7D7DA87DA87DA87DA87DA8FF7DA87DA8%7DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA8%7DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA8%7DA87DA87D7D7DFF7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7D%A87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7D%A87DA87DA87DA87D7D7DA87DA87DA87DA87DA8FF52FD217D52FD0B7D52FD%097D52FD0E7DFFA8A8A87DA8A8A87DA8A8A87DA87DA87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A87D7DA8A8A87DA8A8A87DA87D7D7DA8A8A87DA8%A8A87DA87DA87DA8A8A87DA8A8A87DA87DA8FF7DA87D7D7DA87DA87DA87D%A87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D7D7DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD047DA8FF%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A8FD077DA87D7D7DA8FD077DA87D7D7DA87D7D7DA87D7D7DA8FD057DA87D%A8FF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA8A8FDFCFFFDFCFFFDFCFFFDFCFFFFFD0DA87D%FD1EA8FD1CFF52FD217D52FD0A7DFD1BFF7D7DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA8FD1BFF7DA87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FD1BFF7D7DA8FD057DA8%FD057DA87DA87D7D7DA87DA8FD057DA87D7D7DA87D7D7DA87D7D7DA87D7D%7DA8FD1BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDFCFFFDFCFFFDFCFFFD%FCFFFD63FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFF7D7DA87DA87DA87DA87D7D7DA8%7DA87DA87DA87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7DA8%7DA87DA87DA87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA8FF7D%A87DA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7D%A87DA87DA87DA87D7DA8FF7D7DA87DA87DA87DA87DA8A8A87DA87DA87DA8%7D7D7DA87DA87DA87DA87DA8A8A87DA87DA87DA8A87D7DA87DA87DA87DA8%7DA8A8A87DA87DA87DA87D7D7DA87DA87DA87DA87DA8FF7D7D7DA87D7D7D%A87D7D7DA87D7D7DA8FD077DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D%7D7DA87D7D7DA87D7D7DA87D7D7DA8FD077DA87D7D7DA87D7D7DFF7D7DA8%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD07%7DA87D7D7DA8FD077DA87D7D7DA87D7D7DA87D7D7DA8FD057DA87DA8FF7D%A87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87DA87D7D7DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D7D7DA87D%A87DA87DA8FD057DFFA8A8A87DA8A8A87DA8A8A87DA87DA87DA8A8A87DA8%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87DA87DA8A8A8%7DA8A8A87DA87DA87DA8A8A87DA8A8A87DA87DA8FF527D5252527D527D52%7D527D527D527D527D527D527D5252527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527D527D527D527D527D527D525252%7D7DFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp5 Bn%AI5_BeginGradient: (Blue Radial Gradient)(Blue Radial Gradient) 1 3 Bd[<0000010102030404050506070809090A0B0C0D0E0F0F101112131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2D2E2F30313232333435363738393A3B3C3D3D3E3F40414243444546464748494A4B4C4D4E4F4F50515253545556><0000000000000000000000010000000001000101000101010102010102010201020203020203030303040304040304040404050404050405050505060505060506060706080706070708070808090808090809090A090A0A0B0A0A0B0A0B0B0D0C0E0D>0.0000310.000031<FFFEFDFCFBFAF9F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F><FFFFFEFEFDFDFDFCFCFBFBFAFAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E9E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFA>4 %_Br<5656575757585859595A5A5B5B5B5C5C5D5D5E5F5F6060606162626363636465666667686969696A6B6B6C6C6D6E6F6F707171717273747475757677787879797A7B7C7C7D7F7F8080818282838485858586878788898A8A8B8C8D8E8E8F90909091929394949596969898999A9B9C9C9D9D9E9E9FA0A1A1><0D0D0D0D0F0E0E0E0E0F0F0F0F101010111111101111101212111112121213131214131314141415151516161617171618171919181A19191B1A1C1B1B1C1C1C1D1D1E1E1E1E1E20201F212022212122222424232525262627272628282929292A2A2B2B2D2D2D2E2E302F31313332323333353537363838>0.0000310.000031<9F9F9E9E9E9D9D9C9C9B9B9A9A9998989797969595949393929191908F8F8E8D8C8C8B8A898988878686858483828281807F7E7E7D7C7B7A7A79787776757474737271706F6E6E6D6C6B6A69686766656564636261605F5E5D5C5B5A59585757565554535251504F4E4D4C4B4A494847464544434241403F><D4D4D4D4D3D3D3D3D3D2D2D2D2D1D1D1D0D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADADACACABABAAAAA9A9><FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5>4 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 50.7937 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50.7937 0 Bs0.337499 0.052735 0.000031 0.000031 0.623529 0.831373 0.980392 2 57.3913 35.955 %_BS%_0.337499 0.052735 0.000031 0.000031 0.623529 0.831373 0.980392 2 57.3913 35.955 Bs0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 2 51.0204 100 %_BS%_0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 2 51.0204 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to White)(Fade to White) 0 2 Bd[0.0023190.0002440.0000310.0000310.9921570.9921570.9960784 %_Br[0.002319 0.000244 0.000031 0.000031 0.992157 0.992157 0.996078 2 50 100 %_BS%_0.002319 0.000244 0.000031 0.000031 0.992157 0.992157 0.996078 2 50 100 Bs0.002319 0.000244 0.000031 0.000031 0.992157 0.992157 0.996078 2 75 0 %_BS%_0.002319 0.000244 0.000031 0.000031 0.992157 0.992157 0.996078 2 75 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green Gradient)(Green Gradient) 0 6 Bd[<B4B3B3B3B2B2B1B1B0AFAFAEAEADACACABABAAAAAAA9A8A8A7A7A6A5A5A4A3A3A2A2A19F9F9E9D9C9B9A99989796969594939291908F8F8D><3938373635343331302F2E2D2C2B2A29282725242322211F1E1C1B1A1716141312100F0D0C0A090706040302010000000000000000000000><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFBFAF9F7F6><100F0E0D0D0C0B0A0A0908070706060505040404030302020202010101010100000000000000000000000000000000000000000000000000><5859595A5A5B5C5C5D5E5E5F5F606161626363646465666667676869696A6B6B6C6C6D6E6E6F6F707171727373747475767677787879797A><9192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9><303031313132323233333334343435353636363737373838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3F3F3F4040404141414242424343>4 %_Br<A5A6A6A7A8A8A8A9AAAAAAABACACADADAEAFAFB0B1B1B2B2B3B3B3B4><181A1B1C1E1F20222324252627292B2C2D2E2F303133343536373839>1<010101020202020303040404050506070708090A0A0B0C0D0D0E0F10><696868676666656564636362616160605F5E5E5D5C5C5B5B5A595958><ADACABAAA9A8A7A6A5A4A3A2A1A09E9D9C9B9A999897969594939291><3A3A3939393838373737363636353534343433333332323131313030>4 %_Br<2425262728292A2A2B2C2D2E2E2F3032323334353536373838393A3B3C3D3E3E3F4041414244454546474748494A4A4B4C4C4D4E4E50515252545555565757585A5A5B5C5C5D5E5E5F60606162626364646667676868696A6B6C6D6D6E6E6F7070717272737374757577777878797A7A7B7B7C7C7E7F7F80808181828284858586868787888889898A8B8B8C8D8D8E8E8F8F9090919193939394949595969698989899999A9A9B9B9B9C9C9C9D9D9F9F9FA0A0A0A1A1A1A2A2A2A3A3A3A3A3A3A3A3A4A4A4A4A4A5A5A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000101020101020102020102020302020302030302040303040305040405040405040405050605050605050605050606060707060807070808080909080909090A0A090A0A0A0B0B0B0C0C0B0B0C0C0C0D0D0D0E0E0D0D0E0E0E0E0F0F0F1111101012121111131312121413131314141414141515151515161616161617171717171718181818171717191918181818><3F40414344454648494A4C4D4E4F515253545657585A5B5B5C5D5E60616264656668696A6B6D6E706F717274757778797B7D7E7E80818385868889898B8D8E8F91929493959698999A9C9C9D9FA0A1A3A2A4A5A6A8A8A9ABACADADAEB0B2B3B3B4B6B7B8B9BABBBDBDBEBFC1C1C2C4C5C5C6C7C8C8CACBCBCCCECECFD0D2D2D3D4D4D6D7D7D8DADADBDCDDDEDFDFE0E0E2E3E4E5E5E7E9E9EAEBECEEEEF0F0F2F2F4F4F6F8F8FAFAFCFCFDFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101><DBDAD9D9D8D7D6D6D5D4D3D2D2D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBCBBBAB9B9B8B7B7B6B5B5B4B3B2B2B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6A6A5A4A4A3A2A2A1A0A09F9F9E9D9D9C9B9B9A9A999898979696959594939392929191908F8F8E8E8D8D8C8B8B8A8A898988888786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7A7979787877777676767575747473737372727271717070706F6F6F6E6E6E6D6D6D6C6C6C6C6B6B6B6B6A6A6A6A6A69696969><F0F0EFEFEEEEEDEDECECEBEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0E0DFDFDEDEDEDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECECDCDCCCCCCCBCBCBCACACAC9C9C8C8C8C7C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBCBBBBBBBABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAFAFAEAEAEAEAEAEAEADADADADADAD><CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9C9C9B9A99989796959594939291908F8E8E8D8C8B8A8988888786858483838281807F7F7E7D7C7B7B7A797877777675747373727170706F6E6D6D6C6B6A6A69686767666565646363626160605F5E5E5D5C5C5B5A5A595858575656555554535352525150504F4F4E4D4D4C4C4B4B4A4A4948484747464645454444434343424241414040403F3F3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A3A>4 %_Br<8D8C8C8B8A8989888787868585848383828181817F7E7E7D7C7B7B7A797978777776747373727171706F6F6E6D6D6C6B6A6A696868676666656464636161605F5F5E5D5C5B5A5A595858565555545353525151504F4F4E4D4D4C4C4B4A4A49484746454544444342424140403F3E3D3C3C3B3A3A3939383737363635343433333231312F2F2E2E2D2D2C2B2B2A2A29292828272626252424>0.000031<F6F5F3F1EFEEECEBE9E7E7E5E4E3E2E1E0DFDEDDDBDAD9D8D6D5D4D3D1D0CFCECCCBCAC8C7C6C5C3C2C1C0C0BFBDBCBBBAB8B7B6B5B3B2B1AFAEADABAAA9A7A6A4A3A2A1A09E9D9B9A989795949291908E8D8D8B8A898786858382817F7E7E7C7B7978777574727171706E6D6B6A69676766646361615F5F5E5D5C5A595958575554535351504F4D4D4C4B4A49484745464443414140403F>0.000031<7A7B7B7C7D7E7E7F80808182838384858586878788898A8A8B8C8C8D8E8E8F9090919293939495959697979899999A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B7B8B9B9BABBBBBCBDBDBEBEBFC0C0C1C2C2C3C3C4C5C5C6C7C7C8C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D2D3D3D4D5D5D6D6D7D7D8D8D9D9DADADBDB><C9C9CACACACACBCBCBCCCCCCCCCDCDCDCECECECECFCFCFD0D0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6D6D7D7D7D8D8D8D8D9D9D9D9DADADADBDBDBDBDCDCDCDCDDDDDDDEDEDEDEDFDFDFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0><434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6D6E6F707172737475767778797A7B7C7D7E7F80818283848485868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADADAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C1C2C3C4C4C5C6C7C7C8C9CACACBCBCC>4 %_Br<0F101011121313141515161717191A1A1C1D1E1E1F20202122222324242526272829292A2B2B2C2D2D2E2F2F31313233333435353637373838393A3A3B3C3C3D3D3E4040414142434344444546464748494A4A4B4B4C4C4D4E4E4F4F505051525253535454555556585859595A5A5B5B5C5D5E5E5F5F6061616262646465656666676768686869696A6A6B6B6C6C6D6D6E6E6F6F707070717172727373737474767677777778787979797A7A7B7B7B7C7C7D7D7E7E7E7E7F7F818181818181828283838383848484858585858686868787878788888888898989898A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8C8D8D8D8D8D8D>0.000031<1A1C1D1E20212224252628292A2C2D2E303133343537383A3B3B3C3D3F404243444647484A4B4C4D4F4F50515354555758595A5C5C5D5E5F60626364646667696A6B6D6E6E7071727475777778797B7C7E7E7F81828383858687898A8A8B8D8E8E9091929494959798989A9B9D9E9EA0A1A2A3A4A6A6A7A8AAAAABADAEAEAFB1B1B2B3B3B5B6B6B7B8B9BABBBCBCBDBDBFC0C0C1C2C2C3C5C5C6C7C7C8C8CACBCBCCCCCECFCFD0D0D1D1D3D4D4D5D5D6D6D8D8D9D9DADADBDBDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E5E7E7E7E7E7E9E9EAEBEBECECECEDEEEEEFEFEFEFF1F1F1F3F3F3F3F3F5F5F5F5F5F6F6F6F6F6>0.000031<EEEDEDECEBEAEAE9E8E8E7E6E6E5E4E4E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D7D6D5D5D4D3D3D2D1D1D0D0CFCECECDCCCCCBCACAC9C9C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8B7B7B6B5B5B4B4B3B3B2B1B1B0B0AFAFAEAEADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A3A3A2A2A1A1A0A09F9F9E9E9E9D9D9C9C9B9B9A9A99999898979796969695959494939393929291919090908F8F8E8E8E8D8D8C8C8C8B8B8A8A8A898989888887878786868685858584848483838383828282818181808080807F7F7F7F7E7E7E7E7D7D7D7D7D7C7C7C7C7C7B7B7B7B7B7B7B7A7A7A7A7A7A><F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDFDEDEDEDEDDDDDDDDDDDCDCDCDCDBDBDBDBDBDADADADADAD9D9D9D9D9D8D8D8D8D8D7D7D7D7D7D6D6D6D6D6D5D5D5D5D5D5D4D4D4D4D4D3D3D3D3D3D3D2D2D2D2D2D2D1D1D1D1D1D1D0D0D0D0D0D0CFCFCFCFCFCFCFCECECECECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACACACACACAC9C9C9C9C9C9C9C9C9C9C9C9><E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A2A2A1A09F9E9D9D9C9B9A999998979695949493929191908F8E8D8D8C8B8A8A898887868685848483828181807F7E7E7D7C7B7B7A7979787777767575747372727170706F6F6E6D6D6C6B6B6A69696867676666656464636362616160605F5F5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4F4E4E4D4D4D4C4C4B4B4B4A4A49494948484847474747464646454545454544444444444343434343>4 %_Br[0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 22.7273 100 %_BS%_0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 22.7273 100 Bs0.705653 0.222751 1 0.063722 0.345098 0.568627 0.188235 2 50 93.2584 %_BS%_0.705653 0.222751 1 0.063722 0.345098 0.568627 0.188235 2 50 93.2584 Bs0.647303 0.095888 1 0.003754 0.411765 0.678431 0.227451 2 50 62.3595 %_BS%_0.647303 0.095888 1 0.003754 0.411765 0.678431 0.227451 2 50 62.3595 Bs0.142428 0.000031 0.246067 0.000031 0.858824 0.941176 0.8 2 39.3939 34.8315 %_BS%_0.142428 0.000031 0.246067 0.000031 0.858824 0.941176 0.8 2 39.3939 34.8315 Bs0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 46.5116 10.6742 %_BS%_0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 46.5116 10.6742 Bs0.057465 0.000031 0.103578 0.000031 0.933333 0.972549 0.905882 2 37.5 2.24719 %_BS%_0.057465 0.000031 0.103578 0.000031 0.933333 0.972549 0.905882 2 37.5 2.24719 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.750210.6796830.6702220.901640004 %_Br0.750210.6796830.6702220.901640004 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 68.3944 73.8792 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 68.3944 73.8792 Bs0.75021 0.679683 0.670222 0.90164 0 0 0 2 31.8603 88.7329 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 31.8603 88.7329 Bs0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Squares Angled)(Squares Angled) 11.4478 11.4473 66.9478 66.9473 [%AI3_Tile(0 O 0 R 0.955047 0.739834 0.445289 0.380316 0.082353 0.219608 0.317647 Xa 0.955047 0.739834 0.445289 0.380316 0.082353 0.219608 0.317647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR16.9985 5.8984 m16.9985 16.998 L5.8989 16.998 L5.8989 5.8984 L16.9985 5.8984 Lf28.1001 28.0977 m28.1001 39.1982 L16.9985 39.1982 L16.9985 28.0977 L28.1001 28.0977 Lf39.1978 50.2969 m39.1978 61.3975 L28.1001 61.3975 L28.1001 50.2969 L39.1978 50.2969 Lf16.9985 61.3975 m16.9985 72.4971 L5.9009 72.4971 L5.9009 61.3975 L16.9985 61.3975 Lf72.4966 5.8984 m72.4966 16.998 L61.397 16.998 L61.397 5.8984 L72.4966 5.8984 Lf50.2974 16.998 m50.2974 28.0977 L39.1978 28.0977 L39.1978 16.998 L50.2974 16.998 Lf61.3989 39.1982 m61.3989 50.2979 L50.2974 50.2979 L50.2974 39.1982 L61.3989 39.1982 Lf72.4985 61.3975 m72.4985 72.4971 L61.3989 72.4971 L61.3989 61.3975 L72.4985 61.3975 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.851347 0.519371 0.150301 0.009277 0.164706 0.443137 0.643137 Xa 0.851347 0.519371 0.150301 0.009277 0.164706 0.443137 0.643137 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR39.1978 5.8984 m39.1978 28.0977 L16.9985 28.0977 L16.9985 5.8984 L39.1978 5.8984 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR39.1978 5.8984 m39.1978 28.0977 L16.9985 28.0977 L16.9985 5.8984 L39.1978 5.8984 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 Xa 0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR50.2974 28.0977 m50.2974 50.2979 L28.1001 50.2979 L28.1001 28.0977 L50.2974 28.0977 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR50.2974 28.0977 m50.2974 50.2979 L28.1001 50.2979 L28.1001 28.0977 L50.2974 28.0977 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 Xa 0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR61.3989 50.2969 m61.3989 72.4971 L39.1978 72.4971 L39.1978 50.2969 L61.3989 50.2969 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR61.3989 50.2969 m61.3989 72.4971 L39.1978 72.4971 L39.1978 50.2969 L61.3989 50.2969 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.728817 0.275395 1 0.122774 0.309804 0.513726 0.172549 Xa 0.728817 0.275395 1 0.122774 0.309804 0.513726 0.172549 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR16.9985 16.998 m16.9985 39.1982 L0.3501 39.1982 L0.3501 16.998 L16.9985 16.998 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR16.9985 16.998 m16.9985 39.1982 L0.3501 39.1982 L0.3501 16.998 L16.9985 16.998 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.851347 0.519371 0.150301 0.009277 0.164706 0.443137 0.643137 Xa 0.851347 0.519371 0.150301 0.009277 0.164706 0.443137 0.643137 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR39.1978 61.3975 m39.1978 78.0469 L16.9985 78.0469 L16.9985 61.3975 L39.1978 61.3975 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR39.1978 61.3975 m39.1978 78.0469 L16.9985 78.0469 L16.9985 61.3975 L39.1978 61.3975 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 Xa 0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR61.397 0.3496 m61.397 16.998 L39.1978 16.998 L39.1978 0.3496 L61.397 0.3496 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR61.397 0.3496 m61.397 16.998 L39.1978 16.998 L39.1978 0.3496 L61.397 0.3496 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.728817 0.275395 1 0.122774 0.309804 0.513726 0.172549 Xa 0.728817 0.275395 1 0.122774 0.309804 0.513726 0.172549 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR72.4966 16.998 m72.4966 39.1982 L50.2974 39.1982 L50.2974 16.998 L72.4966 16.998 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR72.4966 16.998 m72.4966 39.1982 L50.2974 39.1982 L50.2974 16.998 L72.4966 16.998 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.403632 0.000031 0.698573 0.000031 0.623529 0.847059 0.470588 Xa 0.403632 0.000031 0.698573 0.000031 0.623529 0.847059 0.470588 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR78.0474 39.1982 m78.0474 61.3984 L61.3989 61.3984 L61.3989 39.1982 L78.0474 39.1982 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR78.0474 39.1982 m78.0474 61.3984 L61.3989 61.3984 L61.3989 39.1982 L78.0474 39.1982 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.403632 0.000031 0.698573 0.000031 0.623529 0.847059 0.470588 Xa 0.403632 0.000031 0.698573 0.000031 0.623529 0.847059 0.470588 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR28.1001 39.1982 m28.1001 61.3984 L5.8989 61.3984 L5.8989 39.1982 L28.1001 39.1982 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 Xa 0.175174 0.015015 0.000031 0.000031 0.803922 0.913725 0.988235 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.7 w 4 M []0 d0 XR28.1001 39.1982 m28.1001 61.3984 L5.8989 61.3984 L5.8989 39.1982 L28.1001 39.1982 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3918.5 4618.4351 m-3704.8999 4618.4351 L-3704.8999 4610.6343 L-3918.5 4610.6343 L-3918.5 4618.4351 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-3918.5 4614.5352 m-3908.4856 4617.0269 -3901.6863 4618.375 -3889.7007 4618.4351 c-3876.7185 4618.5 -3811.6997 4618.4351 y-3746.6816 4618.5 -3733.6997 4618.4351 v-3721.7124 4618.375 -3714.9136 4617.0269 -3704.8999 4614.5352 C-3714.9136 4612.0435 -3721.7124 4610.6953 -3733.6997 4610.6343 c-3746.6816 4610.5688 -3811.6997 4610.6343 y-3876.7185 4610.5688 -3889.7007 4610.6343 v-3901.6863 4610.6953 -3908.4856 4612.0435 -3918.5 4614.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7790.8833 8490.9551 m-7699.0479 8490.9551 L-7699.0479 8486.6758 L-7790.8833 8486.6758 L-7790.8833 8490.9551 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7790.6631 8488.2754 m-7791 8488.3418 -7790.4814 8488.5313 -7790.8833 8488.3887 C-7790.8379 8488.2705 -7790.7725 8488.1816 -7790.6631 8488.2754 Cf-7700.1675 8488.4414 m-7701.2524 8489.2041 -7702.6816 8488.4336 -7703.8701 8488.9199 C-7704.0098 8488.9521 -7703.8345 8488.502 -7704.1484 8488.6025 C-7705.3008 8489.1953 -7707.1162 8488.8418 -7708.5195 8488.3848 C-7708.4346 8488.2666 L-7708.7017 8488.1816 -7709.0283 8488.5723 -7709.3115 8488.5176 C-7709.3135 8488.4395 -7709.2207 8488.4063 -7709.2861 8488.2979 C-7709.3574 8488.5352 -7709.7983 8488.4082 -7709.9185 8488.584 C-7710.0303 8488.4922 -7710.0195 8488.3047 -7710.1641 8488.2002 C-7710.3262 8488.4697 L-7710.7769 8489.1094 -7711.4209 8488.4258 -7712.0361 8488.7559 C-7712.0063 8488.6934 -7711.9453 8488.6445 -7711.9941 8488.584 C-7712.9814 8488.9727 -7714.2168 8488.8994 -7715.3208 8489.043 C-7715.2769 8488.9482 -7715.2363 8488.7754 -7715.3008 8488.668 C-7715.3555 8488.9512 -7715.6963 8489.0225 -7715.9922 8489.0781 C-7716.1255 8488.7871 -7716.4995 8489.3438 -7716.8467 8489.1826 C-7716.8169 8489.1191 L-7717.0732 8489.4238 -7717.1973 8488.9434 -7717.4053 8489.3086 C-7717.5684 8489.0801 L-7717.6807 8489.4902 -7717.9395 8488.8672 -7718.1514 8489.0762 C-7718.1445 8489.1602 L-7718.3442 8489.2598 -7718.4482 8489.0537 -7718.6338 8489.123 C-7718.6514 8489.0762 L-7719.0854 8489.1826 -7719.3379 8488.9551 -7719.3271 8489.2754 C-7719.4795 8489.0186 -7718.9063 8489.1582 -7719.1455 8488.7842 C-7720.5732 8489.1152 -7722.0459 8489.0498 -7723.4834 8489.0566 C-7723.6465 8488.9277 -7723.7505 8488.8887 -7723.7871 8488.7666 C-7723.9307 8488.832 -7724.3281 8488.8262 -7724.4585 8488.9902 C-7724.4102 8488.9834 -7724.5513 8488.8262 -7724.6274 8488.8105 C-7724.8887 8488.6895 -7724.9131 8489.1621 -7725.2002 8489.0186 C-7725.0859 8488.9336 -7725.0469 8488.8301 -7725.0854 8488.7109 C-7725.3301 8488.9609 -7725.6577 8488.9209 -7725.9473 8489.002 C-7725.9023 8488.9482 -7725.8325 8488.916 -7725.8433 8488.8154 C-7726.1602 8489.0986 -7726.4209 8488.7559 -7726.6982 8488.9346 C-7726.5947 8488.75 L-7727.0415 8488.5254 -7726.7266 8489.1367 -7727.1128 8489.0039 C-7727.02 8488.9453 -7727.0527 8488.873 -7727.0361 8488.7979 C-7727.3965 8489.1338 -7727.9795 8489.0225 -7728.3389 8489.1367 C-7728.3174 8489.1113 -7728.3232 8489.0605 Y-7728.7148 8489.1025 -7729.1245 8488.998 -7729.5552 8489.1445 C-7729.7119 8489.0625 -7729.5039 8488.6934 -7729.9185 8488.7617 C-7729.9033 8489.1328 -7730.6221 8488.9141 -7730.3779 8489.334 C-7730.7319 8489.2734 -7731.2925 8489.1338 -7731.5283 8489.2598 C-7731.3691 8489.1191 -7731.7007 8488.8066 -7731.4063 8488.7754 C-7731.6289 8488.5498 L-7731.5957 8488.3984 -7731.3999 8488.6016 -7731.4707 8488.4102 C-7731.6182 8488.4258 -7732.0479 8488.5723 -7732.1797 8488.5117 C-7732.4531 8488.7393 -7732.7041 8489.1641 -7733.1465 8489.2109 C-7732.9385 8489.0664 -7733.2646 8488.8018 -7733.1235 8488.7383 C-7733.7407 8489.4482 L-7733.8877 8489.4658 -7733.7725 8489.1563 -7733.9854 8489.2529 C-7733.9746 8489.3506 -7734.0674 8489.4121 -7734.1318 8489.4922 C-7734.1875 8489.4482 -7734.7441 8489.584 -7734.8081 8489.2178 C-7734.8735 8489.0762 -7734.5684 8489.1426 -7734.7314 8489.0117 C-7735.0029 8489.0146 -7735.0151 8489.1406 -7735.2871 8489.1465 C-7735.2925 8489.0977 L-7735.4717 8489.043 -7735.8213 8489.2529 -7735.6265 8489.4551 C-7735.5015 8489.4658 -7735.6738 8489.2354 -7735.4888 8489.3418 C-7735.6152 8489.5537 -7735.9312 8489.6133 -7736.2031 8489.6162 C-7736.1104 8489.5586 -7736.1216 8489.4609 -7736.0845 8489.3574 C-7736.4497 8489.6445 -7736.8369 8489.7354 -7737.2451 8489.8555 C-7737.2515 8490.0293 -7737.0928 8489.5391 -7737.0327 8489.6309 C-7737.5557 8489.3896 -7738.1128 8489.9727 -7738.5479 8489.6201 C-7738.4766 8489.5898 -7738.5098 8489.8672 -7738.5146 8489.8184 C-7738.7666 8489.7969 -7738.7549 8489.5449 -7738.9189 8489.6377 C-7738.9355 8489.4902 -7739.1255 8489.6855 -7739.2944 8489.7305 C-7739.3818 8489.8369 -7739.3384 8489.6582 -7739.1914 8489.6426 C-7739.4268 8489.7666 -7740.3691 8489.9941 -7740.9131 8489.7793 C-7740.9023 8489.877 -7741.2471 8490.1377 -7741.3721 8490.127 C-7741.3232 8489.8984 L-7741.4375 8489.7617 -7741.7422 8489.918 -7741.7632 8489.7227 C-7742.0303 8490 -7740.7344 8489.4863 -7741.0957 8489.7002 C-7741.1895 8489.5098 -7741.5991 8490.0645 -7741.5215 8489.7529 C-7741.7725 8489.7617 -7742.0161 8490.0186 -7742.2559 8489.8047 C-7742.1865 8489.8418 -7742.0522 8489.4873 -7742.2549 8489.5039 C-7742.6123 8489.5449 -7742.3564 8489.6133 -7742.6465 8489.6895 C-7742.8281 8489.7832 L-7742.8398 8490.0059 -7743.1475 8489.7529 -7743.0146 8490.002 C-7743.0586 8489.8184 -7743.5337 8490.1152 -7743.4971 8489.7461 C-7743.4473 8489.4551 L-7743.6016 8489.4766 -7743.7002 8489.7617 -7743.8213 8489.8896 C-7743.8418 8489.8633 -7743.8823 8489.8047 -7743.8745 8489.7578 C-7743.8994 8490.2031 -7744.2432 8489.7207 -7744.4268 8490.0645 C-7744.7505 8489.9102 -7745.2495 8490.0498 -7745.4023 8489.7734 C-7745.6514 8489.9082 -7745.8784 8490.0674 -7746.1621 8489.9727 C-7746.1055 8489.9307 -7746.0283 8489.918 -7746.0122 8489.8223 C-7746.1904 8489.6914 -7746.2344 8489.8086 -7746.3975 8489.8809 C-7746.3608 8489.8145 -7746.7539 8489.6201 -7746.9521 8489.4629 C-7747.1992 8489.5957 -7747.1143 8489.8359 -7747.1392 8489.9824 C-7747.3652 8489.543 -7747.8379 8490.2656 -7748.1211 8489.8672 C-7748.0352 8489.8066 -7747.7598 8489.6514 -7747.9658 8489.541 C-7748.1919 8489.1025 -7748.4219 8489.8643 -7748.7861 8489.6543 C-7748.6968 8490.0186 L-7748.8594 8489.793 -7749.2334 8490.2305 -7749.1963 8489.8594 C-7749.3184 8489.9902 -7749.6265 8489.7383 -7749.5859 8490.0938 C-7750.1846 8489.793 -7751.0425 8490.2754 -7751.4102 8489.6377 C-7751.4961 8489.6973 -7751.7104 8489.6367 -7751.6665 8489.8193 C-7751.5239 8490.0176 -7751.4673 8489.6777 -7751.4141 8489.8125 C-7751.4912 8489.8232 -7751.5078 8489.9209 -7751.5161 8489.9697 C-7751.7021 8489.8887 -7751.8486 8489.8633 -7751.6729 8489.5674 C-7752.0869 8489.3477 -7752.1001 8490.1719 -7752.6274 8490.0322 C-7752.6035 8489.8857 -7752.6436 8489.8301 -7752.7979 8489.8535 C-7753.0903 8490.1055 L-7753.4312 8490.0469 -7753.2842 8489.7705 -7753.2925 8489.5215 C-7753.4746 8489.5645 -7753.6973 8489.5527 -7753.7803 8489.7383 C-7754.0015 8489.4258 L-7753.8398 8489.6514 -7754.1514 8489.5762 -7754.2368 8489.6367 C-7754.1514 8489.5762 L-7754.1846 8489.4697 -7754.3955 8489.5352 -7754.5024 8489.5664 C-7754.4766 8489.7207 -7754.2617 8489.7832 -7754.1445 8489.8281 C-7754.2373 8489.9375 -7754.3823 8489.9121 -7754.5059 8490.041 C-7754.4648 8489.7969 -7754.8027 8489.8672 -7754.9473 8489.8418 C-7755.1133 8489.7891 -7755.1348 8490.0605 -7755.1831 8490.0527 C-7755.1875 8489.9258 -7755.4541 8490.0313 -7755.3247 8489.8535 C-7755.2681 8489.8125 -7755.1953 8489.9766 -7755.1016 8489.8643 C-7755.2109 8489.7705 -7755.1982 8489.5498 -7755.4258 8489.7109 C-7755.5967 8489.832 -7755.3818 8490.1934 -7755.7061 8490.0391 C-7755.6211 8489.9785 -7755.6055 8489.8809 -7755.5391 8489.793 C-7755.8433 8489.666 L-7755.8564 8489.8887 L-7755.8975 8489.832 -7755.8691 8489.8125 -7755.8877 8489.7832 C-7755.9785 8490.0176 -7756.3521 8489.8555 -7756.4209 8490.1191 C-7756.5742 8490.1426 -7756.7441 8489.9648 -7756.8906 8489.9395 C-7756.8623 8489.9199 L-7757.0415 8489.7891 -7757.2793 8489.875 -7757.4297 8490.0254 C-7757.4219 8489.9766 L-7757.5195 8489.959 -7757.7505 8489.9941 -7757.8735 8490.125 C-7758.1201 8489.957 -7757.9561 8489.2842 -7758.2295 8489.5645 C-7758.48 8489.5723 -7758.6221 8489.9727 -7758.5215 8490.1152 C-7758.9717 8489.9648 -7759.4834 8490.3281 -7759.9009 8489.9824 C-7759.9658 8490.0723 -7759.9248 8490.1289 -7760.0586 8490.1816 C-7760.7197 8490.0938 -7761.4551 8490.4453 -7761.9814 8490.0078 C-7761.79 8489.9141 -7761.9688 8489.7842 -7761.9727 8489.6582 C-7762.1309 8489.8574 -7762.1631 8489.4512 -7762.2197 8489.793 C-7762.2041 8489.9941 -7762.2197 8490.0918 -7762.0337 8490.1729 C-7762.4282 8490.2813 -7763.0283 8490.2813 -7763.2471 8490.0938 C-7763.1377 8490.1865 -7763.2227 8490.248 -7763.3086 8490.3086 C-7763.2803 8489.9873 -7763.5713 8489.9395 -7763.7915 8490.0527 C-7763.8223 8490.248 L-7763.9658 8490.0469 L-7764.0503 8490.1094 -7764.0591 8490.457 -7764.2773 8490.2695 C-7764.2891 8490.1934 -7764.3018 8490.1162 -7764.3418 8490.0605 C-7764.5693 8490.2207 -7764.8906 8490.4922 -7765.1377 8490.3262 C-7765.3398 8490.041 L-7765.4453 8490.0723 -7765.6235 8490.2441 -7765.4375 8490.3262 C-7765.8594 8490.1543 -7766.1309 8490.1328 -7766.2646 8489.8857 C-7766.9912 8490.4873 -7768.0459 8490.5117 -7768.8906 8490.4688 C-7768.8652 8490.3223 L-7769.0923 8490.1855 -7768.9834 8490.5781 -7769.1416 8490.4766 C-7769.0684 8490.3369 -7769.3145 8490.1729 -7769.1362 8490.002 C-7769.4609 8489.8477 -7769.5547 8490.2559 -7769.7656 8490.3223 C-7769.7979 8490.5146 -7769.5957 8490.1992 -7769.6367 8490.4434 C-7769.6729 8490.5117 -7770.0859 8490.293 -7770.1362 8490.584 C-7770.2178 8490.4697 -7770.1543 8490.2559 -7770.1104 8490.1377 C-7770.3086 8490.2793 L-7770.5513 8489.9395 -7769.7559 8489.6719 -7770.0107 8489.2529 C-7770.1934 8489.2979 L-7770.3682 8488.9941 -7769.71 8488.9551 -7770.1689 8488.8506 C-7770.3682 8488.9941 -7770.5381 8489.416 -7770.3608 8489.5449 C-7770.7754 8489.625 -7770.5527 8490.2383 -7770.9985 8490.2139 C-7771.1201 8490.043 -7770.6416 8490.1729 -7770.7275 8489.9336 C-7770.9375 8489.6992 -7771.1484 8490.0645 -7771.3354 8489.9824 C-7771.1279 8490.0918 -7771.3032 8490.3857 -7771.4375 8490.4395 C-7771.6641 8490.3018 -7771.29 8490.1641 -7771.6113 8490.1338 C-7771.6641 8490.3018 -7771.9595 8490.4277 -7771.7041 8490.5449 C-7771.8203 8490.9258 -7772.0381 8490.4395 -7772.2129 8490.7344 C-7772.3174 8490.4658 -7771.8823 8490.1152 -7772.2354 8489.9814 C-7772.1792 8490.2393 -7772.6704 8490.332 -7772.4839 8490.7139 C-7772.6221 8490.6406 -7772.6367 8490.4375 -7772.5361 8490.2793 C-7772.7334 8490.1201 -7773.0151 8490.75 -7773.0801 8490.2383 C-7773.1479 8490.502 L-7773.21 8490.416 -7773.2983 8490.3506 -7773.3994 8490.209 C-7773.5732 8490.2041 -7773.96 8490.5664 -7773.9443 8490.168 C-7774 8490.209 -7774.3975 8490.1914 -7774.2441 8490.4658 C-7773.9971 8490.6338 -7773.96 8490.2656 -7773.8223 8490.6377 C-7773.9971 8490.334 -7774.1787 8490.6777 -7774.3213 8490.7793 C-7774.3447 8490.625 L-7774.4297 8490.6855 -7774.6255 8490.6514 -7774.6787 8490.8184 C-7774.6133 8490.7305 -7774.6475 8490.625 -7774.7148 8490.5879 C-7774.8042 8490.8223 L-7775.1494 8490.9395 -7774.8857 8490.4102 -7775.2217 8490.4785 C-7774.9663 8490.2969 L-7775.0225 8490.3359 -7775.1367 8490.1162 -7775.2979 8490.1895 C-7775.3604 8490.4033 -7775.4775 8490.6602 -7775.5313 8490.8262 C-7775.7207 8490.9199 -7775.6162 8490.585 -7775.8027 8490.8047 C-7775.5586 8490.5469 L-7775.5215 8490.4766 -7775.7231 8490.1934 -7775.9761 8490.1992 C-7776.1377 8490.2734 -7776.3887 8490.582 -7776.1338 8490.6992 C-7776.2607 8490.7031 -7776.4385 8490.5723 -7776.3379 8490.416 C-7776.6255 8490.4902 -7776.2998 8490.6465 -7776.5479 8490.7793 C-7776.6494 8490.6367 -7776.9658 8490.4336 -7777.1563 8490.2266 C-7776.8975 8489.8682 L-7777.0693 8489.8643 L-7776.8467 8489.5781 -7777.1826 8489.6465 -7777.0566 8489.3438 C-7777.1743 8489.2969 -7777.3169 8489.3994 -7777.4307 8489.4785 C-7777.0864 8489.9629 -7777.8159 8490.1406 -7777.7158 8490.582 C-7778.1875 8490.7031 -7778.0107 8489.5078 -7778.5024 8490.1992 C-7778.4219 8490.3145 -7778.6533 8490.6504 -7778.3564 8490.5225 C-7778.6494 8490.4746 -7778.5557 8490.9658 -7778.9014 8490.7832 C-7778.6455 8490.6016 -7779.1763 8490.3359 -7778.8066 8490.0723 C-7778.8311 8490.2178 -7778.6001 8490.1826 -7778.5435 8490.1426 C-7778.6641 8489.9727 -7778.5186 8489.6973 -7778.8184 8489.6973 C-7779.0015 8489.7393 -7779.2524 8489.748 -7779.2158 8489.9785 C-7779.2085 8490.2314 -7778.9365 8489.9512 -7779.0537 8490.207 C-7779.4185 8490.2949 -7779.4795 8489.9102 -7779.6304 8490.3594 C-7779.3999 8490.3232 -7779.3423 8490.584 -7779.3467 8490.7578 C-7779.6143 8490.8633 L-7779.5625 8490.6953 L-7779.9922 8490.5742 -7779.6895 8491 -7780.1055 8490.9551 C-7780.3008 8490.623 L-7780.2017 8490.3369 -7779.6953 8490.75 -7779.7695 8490.2842 C-7780.04 8490.2656 -7780.1299 8490.502 -7780.3848 8490.3818 C-7780.3281 8490.3418 -7780.2505 8490.3301 -7780.1943 8490.2891 C-7780.2915 8490.2734 -7780.3877 8489.6563 -7780.7734 8490.0176 C-7780.9727 8490.1582 -7780.8262 8490.1826 -7780.8311 8490.3574 C-7781.2656 8490.4102 -7781.3955 8490.5879 -7781.6753 8490.6152 C-7781.6177 8490.2754 -7782.1699 8490.582 -7781.8608 8490.2344 C-7781.7188 8490.4336 -7781.0903 8490.4141 -7780.9365 8490.0898 C-7781.0947 8489.6865 -7780.5952 8490.1465 -7780.5024 8489.7383 C-7780.8506 8489.7285 -7780.8335 8489.332 -7780.8896 8489.0723 C-7780.9863 8489.0537 -7781.0801 8489.1641 -7781.1377 8489.2041 C-7781.1787 8489.4482 -7781.0522 8489.4453 -7781.0449 8489.6973 C-7781.4336 8489.6309 -7781.8081 8489.7666 -7782.0225 8490.0059 C-7782.1523 8489.8848 -7782.1113 8489.6406 -7781.9575 8489.6162 C-7782.4199 8489.6895 -7782.9141 8489.6563 -7783.3535 8489.582 C-7783.0693 8489.9814 -7783.8433 8489.6758 -7783.6494 8490.0078 C-7783.4141 8490.0977 -7783.2119 8490.3818 -7783.3418 8490.5605 C-7783.4888 8490.5352 -7783.3369 8490.3857 -7783.3984 8490.3008 C-7783.5859 8490.5186 -7783.6895 8489.9512 -7783.8735 8490.2949 C-7783.4512 8490.166 -7783.7915 8489.8086 -7783.7139 8489.4961 C-7784.0186 8489.6719 -7783.7007 8489.2734 -7784.0024 8489.2734 C-7784.3057 8489.4473 -7784.6787 8489.584 -7785.0161 8489.6514 C-7785.4399 8489.3555 -7786.0898 8489.6465 -7786.4683 8489.6582 C-7786.6665 8489.5 -7786.5322 8489.1465 -7786.7471 8489.085 C-7786.9995 8489.0918 -7786.5601 8489.4658 -7786.9336 8489.3047 C-7786.8975 8489.2344 L-7787.0107 8489.3154 -7787.5825 8488.9941 -7787.6929 8489.502 C-7787.5776 8489.1191 L-7787.6475 8489.084 -7787.7119 8489.1719 -7787.7695 8489.2129 C-7787.7725 8489.0879 -7787.8535 8488.9746 -7787.7402 8488.8926 C-7787.9707 8488.6289 -7788.2241 8488.9346 -7788.4746 8488.9453 C-7788.3135 8489.1719 L-7788.7422 8489.3496 -7789.0293 8489.125 -7789.4443 8489.2041 C-7789.4316 8488.9824 L-7789.6787 8489.1152 L-7789.6182 8488.8994 -7789.8447 8488.7617 -7789.9751 8488.9414 C-7789.3335 8488.3984 L-7789.1553 8488.5293 -7789.5283 8488.666 -7789.4165 8488.8848 C-7789.3213 8489.0762 -7788.9375 8489.0146 -7788.8755 8488.8018 C-7789.0225 8488.7773 -7789.0293 8488.8262 -7789.1436 8488.9063 C-7789.1919 8488.5977 -7788.9688 8488.6094 -7788.8584 8488.4033 C-7788.9355 8488.416 -7789.0449 8488.3223 -7789.0615 8488.4199 C-7788.9102 8488.2695 -7788.7578 8488.2461 -7788.5059 8488.2383 C-7788.6763 8488.3594 -7788.4131 8488.4297 -7788.4775 8488.5176 C-7788.4575 8488.2461 -7788.2168 8488.1621 -7787.9053 8488.2383 C-7787.6831 8488.5527 -7787.3208 8488.0361 -7786.96 8488.123 C-7787.1064 8488.3984 -7787.2935 8488.6191 -7787.5127 8488.7305 C-7787.2861 8488.8682 -7787.2607 8488.7227 -7787.0337 8488.8613 C-7786.9238 8488.6563 -7786.8457 8488.3418 -7786.5503 8488.2168 C-7786.5342 8488.4199 L-7786.2666 8488.3154 -7786.2666 8488.0146 -7785.9258 8488.0723 C-7785.3418 8488.1719 -7784.7407 8488.1719 -7784.2949 8488.1973 C-7784.2783 8488.3994 L-7784.0303 8487.9658 -7783.4521 8488.2393 -7783.1182 8488.0469 C-7782.5503 8488.2422 -7781.8848 8487.8535 -7781.5938 8488.2031 C-7780.5913 8488.0469 -7779.7148 8487.8945 -7778.6768 8487.9688 C-7778.8516 8488.2637 L-7778.6655 8488.0469 -7778.7305 8488.4336 -7778.5479 8488.3896 C-7778.7578 8488.1543 -7778.2949 8488.084 -7778.1665 8487.9033 C-7777.7041 8488.1328 -7777.1104 8487.8818 -7776.7007 8487.6758 C-7776.6846 8487.8789 L-7776.2705 8487.498 -7775.7759 8487.832 -7775.2598 8487.8945 C-7775.2007 8487.9785 -7775.1074 8488.1689 -7774.9536 8488.1465 C-7774.6738 8487.8184 -7774.5273 8487.8418 -7774.1167 8487.6367 C-7773.8169 8487.6367 -7773.3301 8487.7178 -7773.0254 8487.8457 C-7771.8975 8487.3848 -7770.7456 8487.6797 -7769.5732 8487.4023 C-7769.4888 8487.6406 L-7768.3521 8487.1309 -7766.9541 8487.5938 -7765.9839 8487.332 C-7766.0776 8487.7393 L-7765.7734 8487.8643 -7765.3843 8487.6328 -7765.4619 8487.3438 C-7765.1567 8487.4688 -7764.7007 8487.1465 -7764.5068 8487.4814 C-7764.1953 8487.5566 -7764.1255 8487.293 -7763.8662 8487.2383 C-7763.2422 8487.3926 -7763.0107 8487.3574 -7762.4224 8487.2813 C-7762.5684 8487.2559 L-7762.6328 8487.3457 -7762.6387 8487.5186 -7762.4922 8487.5449 C-7762.2725 8487.4307 -7761.6846 8487.6543 -7761.9033 8487.168 C-7761.2754 8487.4482 -7760.4385 8486.9395 -7759.8271 8487.3184 C-7759.8789 8487.1855 -7759.7246 8487.1602 -7759.6602 8487.0703 C-7759.1089 8487.0645 -7758.5293 8487.3359 -7758.0898 8487.1094 C-7758.0024 8487.1758 -7758.2295 8487.3359 -7758.0049 8487.3496 C-7757.8721 8487.2979 -7758.0024 8487.1758 -7757.8384 8487.1016 C-7756.9453 8486.8535 -7756.0303 8487.3574 -7755.2188 8487.293 C-7753.7754 8487.0361 -7752.2695 8487.166 -7750.8867 8487.123 C-7750.9023 8487.2207 L-7750.4395 8486.8477 -7749.8159 8487.6025 -7749.4463 8487.041 C-7749.3369 8487.1338 -7749.0283 8487.085 -7749.1094 8487.2734 C-7748.7407 8487.0098 -7748.0771 8487.5215 -7747.5439 8487.1865 C-7747.5928 8487.1777 -7747.6211 8487.1973 -7747.6777 8487.2393 C-7747.1392 8487.4551 -7746.6641 8487.1602 -7746.0957 8487.3555 C-7746.1533 8487.3975 -7746.2583 8487.4277 -7746.2754 8487.5254 C-7746.0557 8487.7129 -7745.7549 8487.1133 -7745.6348 8487.584 C-7745.5088 8487.5801 -7745.5449 8487.3477 -7745.6221 8487.3613 C-7744.3779 8487.5449 -7743.0498 8487.2441 -7741.7549 8487.1367 C-7740.8271 8487.418 -7741.6982 8487.9297 -7740.9663 8487.5781 C-7740.9063 8487.6689 -7740.9229 8487.3984 -7740.9131 8487.4961 C-7740.6299 8487.3643 -7740.4717 8488.0215 -7740.2754 8487.7754 C-7740.3564 8487.4863 -7740.1445 8487.6133 -7740.1387 8487.4375 C-7739.5713 8487.625 -7739.4575 8487.8857 -7739.0098 8487.666 C-7739.0435 8487.8184 L-7738.5186 8487.3887 -7737.9102 8487.6191 -7737.4673 8487.123 C-7734.5728 8487.0322 -7731.7983 8486.7578 -7728.9761 8486.7002 C-7726.1865 8486.7949 -7723.4551 8486.5723 -7720.6221 8486.8359 C-7719.9585 8487.2354 -7719.9087 8487.2246 -7719.1797 8487.0625 C-7719.2095 8487.127 -7719.2549 8487.1426 -7719.2061 8487.2031 C-7719.1699 8486.875 -7718.6929 8487.1719 -7718.6235 8486.8594 C-7717.5762 8486.9199 -7716.6113 8486.8301 -7715.5337 8486.8281 C-7715.7041 8486.8633 -7715.7896 8487.1309 -7715.5869 8487.1094 C-7715.3755 8486.8994 L-7715.3408 8486.9922 L-7715.2021 8486.9434 -7715.0513 8486.7813 -7715.1943 8486.6758 C-7712.4873 8486.3926 -7709.8242 8487.0498 -7707.1729 8486.9697 C-7706.5435 8487.1064 -7705.6475 8486.9814 -7704.9629 8486.9141 C-7702.9355 8487.3506 -7701.1079 8487.7041 -7699.0479 8487.3984 C-7699.3169 8488.2461 -7700.1675 8488.4414 Vf-7790.2578 8488.2422 m-7790.1855 8488.4063 -7789.9497 8488.4961 -7790.1377 8488.7139 C-7790.1611 8488.5605 -7790.2822 8488.3887 -7790.2578 8488.2422 Cf-7783.9619 8489.9297 m-7783.9536 8489.8809 -7783.8721 8489.9961 -7783.8521 8490.0225 C-7783.9297 8490.0352 -7784.0024 8490.1729 -7784.0645 8490.0879 C-7783.9854 8490.0762 -7783.9976 8489.998 -7783.9619 8489.9297 Cf-7782.3521 8490.0273 m-7782.3765 8490.1729 -7782.7207 8490.2891 -7782.9238 8490.3066 C-7782.3521 8490.0273 Lf-7780.8521 8490.6289 m-7780.7227 8490.752 -7780.7583 8490.8193 -7780.9326 8490.8154 C-7780.9453 8490.7383 -7780.8877 8490.6992 -7780.8521 8490.6289 Cf-7780.7456 8490.2969 m-7780.6211 8490.293 -7780.5591 8490.3789 -7780.4985 8490.4629 C-7780.5029 8490.3369 -7780.7871 8490.541 -7780.7456 8490.2969 Cf-7777.4893 8490.7207 m-7777.4111 8490.709 -7777.2417 8490.5879 -7777.1689 8490.75 C-7777.2505 8490.6367 -7777.5498 8490.9346 -7777.4893 8490.7207 Cf-7775.9761 8490.5 m-7775.9272 8490.5098 -7775.9072 8490.5361 -7775.8506 8490.4961 C-7775.7607 8490.5625 -7775.8555 8490.6689 -7775.9312 8490.6826 C-7775.9761 8490.5 Lf-7748.4287 8489.9141 m-7748.5923 8489.9863 L-7748.5684 8489.8418 L-7748.4287 8489.9141 Lf-7736.3574 8489.9063 m-7736.1943 8489.8145 -7736.2441 8490.043 -7736.2168 8490.0645 C-7736.3643 8490.0801 -7736.1621 8489.8848 -7736.3574 8489.9063 Cf-7729.8486 8489.1777 m-7729.8984 8489.1816 L-7729.8818 8488.8818 L-7729.8486 8489.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pattern 6)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7790 8488.4824 m-7647.0806 8488.4824 L-7647.0806 8465.4023 L-7790 8465.4023 L-7790 8488.4824 Lnu0 O0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7728.6196 8470.5117 m-7726.9126 8473.04 -7724.3247 8476.0801 -7721.3345 8479.0703 c-7715.8403 8484.5625 -7709.1841 8489.582 -7707.6665 8488.0654 C-7708.0161 8487.7148 L-7708.3794 8488.0762 -7709.7476 8487.8018 -7712.4985 8485.9453 c-7715.0005 8484.2559 -7718.0142 8481.6895 -7720.9829 8478.7197 c-7727.4546 8472.248 -7729.9795 8467.6309 -7729.0415 8466.6914 C-7730.3296 8465.4023 L-7731.0195 8466.0918 -7730.4438 8467.8105 -7728.6196 8470.5117 cf-7735.8843 8478.4727 m-7735.3892 8478.4727 L-7735.3892 8477.1445 -7729.0103 8475.6641 -7719.8589 8475.6641 c-7710.7075 8475.6641 -7704.3306 8477.1445 -7704.3306 8478.4727 C-7702.1138 8478.4727 L-7702.1138 8476.3271 -7712.0903 8475.168 -7719.8589 8475.168 c-7727.6284 8475.168 -7735.8843 8476.3271 -7735.8843 8478.4727 Cf-7712.0288 8467.5293 m-7714.5562 8469.2354 -7717.5962 8471.8242 -7720.5864 8474.8145 c-7726.0796 8480.3086 -7731.0991 8486.9648 -7729.5815 8488.4824 C-7728.5278 8487.4277 L-7729.4663 8486.4873 -7726.7075 8481.6367 -7720.2358 8475.1641 c-7717.2671 8472.1953 -7714.2534 8469.6289 -7711.7524 8467.9395 c-7709.0005 8466.082 -7707.6323 8465.8066 -7707.2695 8466.1689 C-7706.9185 8465.8193 L-7707.6099 8465.1289 -7709.3286 8465.7041 -7712.0288 8467.5293 cfu1 Ap-7714.0376 8478.1426 m-7714.0376 8480.5596 -7715.9985 8482.5186 -7718.4146 8482.5186 c-7720.8325 8482.5186 -7722.7935 8480.5596 -7722.7935 8478.1426 c-7722.7935 8475.7246 -7720.8325 8473.7646 -7718.4146 8473.7646 c-7715.9985 8473.7646 -7714.0376 8475.7246 -7714.0376 8478.1426 cf/ShapeBlendPathType (K) XT/ShapeBlendPathID (B) XT0 Ap0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7714.3267 8477.9922 m-7714.3267 8480.166 -7716.0903 8481.9297 -7718.2642 8481.9297 c-7720.4399 8481.9297 -7722.2036 8480.166 -7722.2036 8477.9922 c-7722.2036 8475.8154 -7720.4399 8474.0537 -7718.2642 8474.0537 c-7716.0903 8474.0537 -7714.3267 8475.8154 -7714.3267 8477.9922 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7714.6177 8477.8418 m-7714.6177 8479.7734 -7716.1841 8481.3398 -7718.1147 8481.3398 c-7720.0464 8481.3398 -7721.6128 8479.7734 -7721.6128 8477.8418 c-7721.6128 8475.9102 -7720.0464 8474.3447 -7718.1147 8474.3447 c-7716.1841 8474.3447 -7714.6177 8475.9102 -7714.6177 8477.8418 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7714.9067 8477.6914 m-7714.9067 8479.3799 -7716.2769 8480.749 -7717.9653 8480.749 c-7719.6528 8480.749 -7721.0225 8479.3799 -7721.0225 8477.6914 c-7721.0225 8476.0029 -7719.6528 8474.6348 -7717.9653 8474.6348 c-7716.2769 8474.6348 -7714.9067 8476.0029 -7714.9067 8477.6914 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7715.1978 8477.541 m-7715.1978 8478.9863 -7716.3696 8480.1582 -7717.8149 8480.1582 c-7719.2603 8480.1582 -7720.4321 8478.9863 -7720.4321 8477.541 c-7720.4321 8476.0957 -7719.2603 8474.9248 -7717.8149 8474.9248 c-7716.3696 8474.9248 -7715.1978 8476.0957 -7715.1978 8477.541 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7715.4868 8477.3906 m-7715.4868 8478.5938 -7716.4634 8479.5674 -7717.6646 8479.5674 c-7718.8667 8479.5674 -7719.8423 8478.5938 -7719.8423 8477.3906 c-7719.8423 8476.1895 -7718.8667 8475.2139 -7717.6646 8475.2139 c-7716.4634 8475.2139 -7715.4868 8476.1895 -7715.4868 8477.3906 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7715.7778 8477.2402 m-7715.7778 8478.2002 -7716.5552 8478.9785 -7717.5142 8478.9785 c-7718.4731 8478.9785 -7719.2515 8478.2002 -7719.2515 8477.2402 c-7719.2515 8476.2822 -7718.4731 8475.5049 -7717.5142 8475.5049 c-7716.5552 8475.5049 -7715.7778 8476.2822 -7715.7778 8477.2402 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7716.0679 8477.0908 m-7716.0679 8477.8066 -7716.6489 8478.3877 -7717.3638 8478.3877 c-7718.0806 8478.3877 -7718.6606 8477.8066 -7718.6606 8477.0908 c-7718.6606 8476.375 -7718.0806 8475.7949 -7717.3638 8475.7949 c-7716.6489 8475.7949 -7716.0679 8476.375 -7716.0679 8477.0908 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7716.3579 8476.9414 m-7716.3579 8477.4141 -7716.7417 8477.7969 -7717.2134 8477.7969 c-7717.6875 8477.7969 -7718.0708 8477.4141 -7718.0708 8476.9414 c-7718.0708 8476.4688 -7717.6875 8476.085 -7717.2134 8476.085 c-7716.7417 8476.085 -7716.3579 8476.4688 -7716.3579 8476.9414 cf1 Ap0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7716.6479 8476.791 m-7716.6479 8477.0205 -7716.8345 8477.207 -7717.0645 8477.207 c-7717.2935 8477.207 -7717.4814 8477.0205 -7717.4814 8476.791 c-7717.4814 8476.5605 -7717.2935 8476.375 -7717.0645 8476.375 c-7716.8345 8476.375 -7716.6479 8476.5605 -7716.6479 8476.791 cf/ShapeBlendPathType (K) XT/ShapeBlendPathID (A) XTUuu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7739.7329 8478.5186 m-7739.7329 8480.6191 -7741.4341 8482.3223 -7743.5337 8482.3223 c-7745.6348 8482.3223 -7747.3369 8480.6191 -7747.3369 8478.5186 c-7747.3369 8476.4199 -7745.6348 8474.7178 -7743.5337 8474.7178 c-7741.4341 8474.7178 -7739.7329 8476.4199 -7739.7329 8478.5186 cf0 Ap0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7746.7437 8478.3896 m-7746.7437 8476.5 -7745.2485 8474.9697 -7743.4038 8474.9697 c-7741.5601 8474.9697 -7740.0649 8476.5 -7740.0649 8478.3896 c-7740.0649 8480.2783 -7741.5601 8481.8096 -7743.4038 8481.8096 c-7745.2485 8481.8096 -7746.7437 8480.2783 -7746.7437 8478.3896 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7746.1509 8478.2578 m-7746.1509 8476.5811 -7744.8628 8475.2217 -7743.2739 8475.2217 c-7741.6851 8475.2217 -7740.3975 8476.5811 -7740.3975 8478.2578 c-7740.3975 8479.9375 -7741.6851 8481.2969 -7743.2739 8481.2969 c-7744.8628 8481.2969 -7746.1509 8479.9375 -7746.1509 8478.2578 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7745.5576 8478.1289 m-7745.5576 8476.6621 -7744.4771 8475.4736 -7743.1431 8475.4736 c-7741.8091 8475.4736 -7740.7295 8476.6621 -7740.7295 8478.1289 c-7740.7295 8479.5957 -7741.8091 8480.7842 -7743.1431 8480.7842 c-7744.4771 8480.7842 -7745.5576 8479.5957 -7745.5576 8478.1289 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7744.9648 8477.998 m-7744.9648 8476.7422 -7744.0903 8475.7256 -7743.0122 8475.7256 c-7741.9351 8475.7256 -7741.0615 8476.7422 -7741.0615 8477.998 c-7741.0615 8479.2529 -7741.9351 8480.2705 -7743.0122 8480.2705 c-7744.0903 8480.2705 -7744.9648 8479.2529 -7744.9648 8477.998 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7744.3716 8477.8672 m-7744.3716 8476.8242 -7743.7046 8475.9775 -7742.8833 8475.9775 c-7742.0601 8475.9775 -7741.3931 8476.8242 -7741.3931 8477.8672 c-7741.3931 8478.9121 -7742.0601 8479.7578 -7742.8833 8479.7578 c-7743.7046 8479.7578 -7744.3716 8478.9121 -7744.3716 8477.8672 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7743.7788 8477.7373 m-7743.7788 8476.9033 -7743.3188 8476.2295 -7742.7524 8476.2295 c-7742.1851 8476.2295 -7741.7251 8476.9033 -7741.7251 8477.7373 c-7741.7251 8478.5703 -7742.1851 8479.2461 -7742.7524 8479.2461 c-7743.3188 8479.2461 -7743.7788 8478.5703 -7743.7788 8477.7373 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7743.1865 8477.6074 m-7743.1865 8476.9854 -7742.9331 8476.4814 -7742.6216 8476.4814 c-7742.3101 8476.4814 -7742.0571 8476.9854 -7742.0571 8477.6074 c-7742.0571 8478.2285 -7742.3101 8478.7324 -7742.6216 8478.7324 c-7742.9331 8478.7324 -7743.1865 8478.2285 -7743.1865 8477.6074 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7742.5923 8477.4766 m-7742.5923 8477.0664 -7742.5474 8476.7324 -7742.4907 8476.7324 c-7742.4365 8476.7324 -7742.3892 8477.0664 -7742.3892 8477.4766 c-7742.3892 8477.8857 -7742.4365 8478.2207 -7742.4907 8478.2207 c-7742.5474 8478.2207 -7742.5923 8477.8857 -7742.5923 8477.4766 cf1 Ap0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7741.9995 8477.3457 m-7741.9995 8477.5449 -7742.1606 8477.708 -7742.3608 8477.708 c-7742.5601 8477.708 -7742.7222 8477.5449 -7742.7222 8477.3457 c-7742.7222 8477.1465 -7742.5601 8476.9854 -7742.3608 8476.9854 c-7742.1606 8476.9854 -7741.9995 8477.1465 -7741.9995 8477.3457 cfU/ShapeBlendPathType (K) XT/ShapeBlendPathID (B) XTu0 Ap0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7751.1841 8478.5186 m-7751.1841 8480.4023 -7752.7104 8481.9297 -7754.5933 8481.9297 c-7756.4761 8481.9297 -7758.0029 8480.4023 -7758.0029 8478.5186 c-7758.0029 8476.6367 -7756.4761 8475.1113 -7754.5933 8475.1113 c-7752.7104 8475.1113 -7751.1841 8476.6367 -7751.1841 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7751.4702 8478.4033 m-7751.4702 8480.0967 -7752.8159 8481.4697 -7754.4761 8481.4697 c-7756.1367 8481.4697 -7757.4824 8480.0967 -7757.4824 8478.4033 c-7757.4824 8476.709 -7756.1367 8475.3369 -7754.4761 8475.3369 c-7752.8159 8475.3369 -7751.4702 8476.709 -7751.4702 8478.4033 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7751.7563 8478.2842 m-7751.7563 8479.791 -7752.9219 8481.0098 -7754.3589 8481.0098 c-7755.7974 8481.0098 -7756.9629 8479.791 -7756.9629 8478.2842 c-7756.9629 8476.7813 -7755.7974 8475.5625 -7754.3589 8475.5625 c-7752.9219 8475.5625 -7751.7563 8476.7813 -7751.7563 8478.2842 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7752.0425 8478.168 m-7752.0425 8479.4844 -7753.0273 8480.5498 -7754.2422 8480.5498 c-7755.4585 8480.5498 -7756.4429 8479.4844 -7756.4429 8478.168 c-7756.4429 8476.8535 -7755.4585 8475.7891 -7754.2422 8475.7891 c-7753.0273 8475.7891 -7752.0425 8476.8535 -7752.0425 8478.168 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7752.3286 8478.0518 m-7752.3286 8479.1777 -7753.1328 8480.0898 -7754.1255 8480.0898 c-7755.1182 8480.0898 -7755.9229 8479.1777 -7755.9229 8478.0518 c-7755.9229 8476.9258 -7755.1182 8476.0146 -7754.1255 8476.0146 c-7753.1328 8476.0146 -7752.3286 8476.9258 -7752.3286 8478.0518 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7752.6147 8477.9346 m-7752.6147 8478.8711 -7753.2388 8479.6309 -7754.0088 8479.6309 c-7754.7783 8479.6309 -7755.4028 8478.8711 -7755.4028 8477.9346 c-7755.4028 8476.999 -7754.7783 8476.2402 -7754.0088 8476.2402 c-7753.2388 8476.2402 -7752.6147 8476.999 -7752.6147 8477.9346 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7752.9009 8477.8184 m-7752.9009 8478.5645 -7753.3442 8479.1689 -7753.8921 8479.1689 c-7754.4395 8479.1689 -7754.8828 8478.5645 -7754.8828 8477.8184 c-7754.8828 8477.0723 -7754.4395 8476.4668 -7753.8921 8476.4668 c-7753.3442 8476.4668 -7752.9009 8477.0723 -7752.9009 8477.8184 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7753.1875 8477.7002 m-7753.1875 8478.2598 -7753.4497 8478.7109 -7753.7749 8478.7109 c-7754.1001 8478.7109 -7754.3628 8478.2598 -7754.3628 8477.7002 c-7754.3628 8477.1445 -7754.1001 8476.6924 -7753.7749 8476.6924 c-7753.4497 8476.6924 -7753.1875 8477.1445 -7753.1875 8477.7002 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7753.4727 8477.584 m-7753.4727 8477.3359 -7753.5562 8477.1357 -7753.6577 8477.1357 c-7753.7603 8477.1357 -7753.8433 8477.3359 -7753.8433 8477.584 c-7753.8433 8477.832 -7753.7603 8478.0332 -7753.6577 8478.0332 c-7753.5562 8478.0332 -7753.4727 8477.832 -7753.4727 8477.584 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7753.7593 8477.4668 m-7753.7593 8477.2891 -7753.6611 8477.1445 -7753.5405 8477.1445 c-7753.4204 8477.1445 -7753.3232 8477.2891 -7753.3232 8477.4668 c-7753.3232 8477.6465 -7753.4204 8477.792 -7753.5405 8477.792 c-7753.6611 8477.792 -7753.7593 8477.6465 -7753.7593 8477.4668 cfUu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7762.6362 8478.5186 m-7762.6362 8480.1855 -7763.9863 8481.5352 -7765.6519 8481.5352 c-7767.3179 8481.5352 -7768.6685 8480.1855 -7768.6685 8478.5186 c-7768.6685 8476.8535 -7767.3179 8475.5039 -7765.6519 8475.5039 c-7763.9863 8475.5039 -7762.6362 8476.8535 -7762.6362 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7762.8765 8478.416 m-7762.8765 8479.9141 -7764.0728 8481.1289 -7765.5483 8481.1289 c-7767.0249 8481.1289 -7768.2212 8479.9141 -7768.2212 8478.416 c-7768.2212 8476.918 -7767.0249 8475.7041 -7765.5483 8475.7041 c-7764.0728 8475.7041 -7762.8765 8476.918 -7762.8765 8478.416 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7763.1162 8478.3125 m-7763.1162 8479.6445 -7764.1592 8480.7227 -7765.4448 8480.7227 c-7766.7319 8480.7227 -7767.7749 8479.6445 -7767.7749 8478.3125 c-7767.7749 8476.9824 -7766.7319 8475.9033 -7765.4448 8475.9033 c-7764.1592 8475.9033 -7763.1162 8476.9824 -7763.1162 8478.3125 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7763.3564 8478.209 m-7763.3564 8479.373 -7764.2446 8480.3164 -7765.3413 8480.3164 c-7766.4395 8480.3164 -7767.3276 8479.373 -7767.3276 8478.209 c-7767.3276 8477.0469 -7766.4395 8476.1025 -7765.3413 8476.1025 c-7764.2446 8476.1025 -7763.3564 8477.0469 -7763.3564 8478.209 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7763.5962 8478.1055 m-7763.5962 8479.1016 -7764.3315 8479.9082 -7765.2383 8479.9082 c-7766.1455 8479.9082 -7766.8809 8479.1016 -7766.8809 8478.1055 c-7766.8809 8477.1094 -7766.1455 8476.3018 -7765.2383 8476.3018 c-7764.3315 8476.3018 -7763.5962 8477.1094 -7763.5962 8478.1055 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7763.8359 8478.002 m-7763.8359 8478.8311 -7764.4175 8479.502 -7765.1353 8479.502 c-7765.8521 8479.502 -7766.4341 8478.8311 -7766.4341 8478.002 c-7766.4341 8477.1738 -7765.8521 8476.5039 -7765.1353 8476.5039 c-7764.4175 8476.5039 -7763.8359 8477.1738 -7763.8359 8478.002 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7764.0762 8477.8984 m-7764.0762 8478.5605 -7764.5034 8479.0957 -7765.0317 8479.0957 c-7765.5596 8479.0957 -7765.9873 8478.5605 -7765.9873 8477.8984 c-7765.9873 8477.2383 -7765.5596 8476.7031 -7765.0317 8476.7031 c-7764.5034 8476.7031 -7764.0762 8477.2383 -7764.0762 8477.8984 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7764.3159 8477.7959 m-7764.3159 8478.2891 -7764.5898 8478.6895 -7764.9282 8478.6895 c-7765.2661 8478.6895 -7765.5405 8478.2891 -7765.5405 8477.7959 c-7765.5405 8477.3018 -7765.2661 8476.9023 -7764.9282 8476.9023 c-7764.5898 8476.9023 -7764.3159 8477.3018 -7764.3159 8477.7959 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7764.5557 8477.6924 m-7764.5557 8477.6074 -7764.6763 8477.5391 -7764.8247 8477.5391 c-7764.9731 8477.5391 -7765.0933 8477.6074 -7765.0933 8477.6924 c-7765.0933 8477.7773 -7764.9731 8477.8457 -7764.8247 8477.8457 c-7764.6763 8477.8457 -7764.5557 8477.7773 -7764.5557 8477.6924 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7764.7959 8477.5889 m-7764.7959 8477.4316 -7764.7622 8477.3018 -7764.7212 8477.3018 c-7764.6802 8477.3018 -7764.6465 8477.4316 -7764.6465 8477.5889 c-7764.6465 8477.748 -7764.6802 8477.876 -7764.7212 8477.876 c-7764.7622 8477.876 -7764.7959 8477.748 -7764.7959 8477.5889 cfUu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7774.0884 8478.5186 m-7774.0884 8479.9688 -7775.2622 8481.1426 -7776.7104 8481.1426 c-7778.1597 8481.1426 -7779.3345 8479.9688 -7779.3345 8478.5186 c-7779.3345 8477.0703 -7778.1597 8475.8975 -7776.7104 8475.8975 c-7775.2622 8475.8975 -7774.0884 8477.0703 -7774.0884 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7774.2817 8478.4297 m-7774.2817 8479.7324 -7775.3291 8480.7891 -7776.6211 8480.7891 c-7777.9131 8480.7891 -7778.9604 8479.7324 -7778.9604 8478.4297 c-7778.9604 8477.127 -7777.9131 8476.0703 -7776.6211 8476.0703 c-7775.3291 8476.0703 -7774.2817 8477.127 -7774.2817 8478.4297 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7774.4761 8478.3398 m-7774.4761 8479.498 -7775.3965 8480.4346 -7776.5308 8480.4346 c-7777.6665 8480.4346 -7778.5864 8479.498 -7778.5864 8478.3398 c-7778.5864 8477.1826 -7777.6665 8476.2441 -7776.5308 8476.2441 c-7775.3965 8476.2441 -7774.4761 8477.1826 -7774.4761 8478.3398 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7774.6694 8478.25 m-7774.6694 8479.2617 -7775.4624 8480.082 -7776.4409 8480.082 c-7777.4199 8480.082 -7778.2124 8479.2617 -7778.2124 8478.25 c-7778.2124 8477.2383 -7777.4199 8476.4189 -7776.4409 8476.4189 c-7775.4624 8476.4189 -7774.6694 8477.2383 -7774.6694 8478.25 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7774.8638 8478.1602 m-7774.8638 8479.0254 -7775.5293 8479.7285 -7776.3511 8479.7285 c-7777.1729 8479.7285 -7777.8389 8479.0254 -7777.8389 8478.1602 c-7777.8389 8477.293 -7777.1729 8476.5918 -7776.3511 8476.5918 c-7775.5293 8476.5918 -7774.8638 8477.293 -7774.8638 8478.1602 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7775.0571 8478.0703 m-7775.0571 8478.791 -7775.5962 8479.375 -7776.2612 8479.375 c-7776.9263 8479.375 -7777.4648 8478.791 -7777.4648 8478.0703 c-7777.4648 8477.3496 -7776.9263 8476.7656 -7776.2612 8476.7656 c-7775.5962 8476.7656 -7775.0571 8477.3496 -7775.0571 8478.0703 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7775.2515 8477.9805 m-7775.2515 8478.5537 -7775.6631 8479.0205 -7776.1714 8479.0205 c-7776.6797 8479.0205 -7777.0913 8478.5537 -7777.0913 8477.9805 c-7777.0913 8477.4063 -7776.6797 8476.9395 -7776.1714 8476.9395 c-7775.6631 8476.9395 -7775.2515 8477.4063 -7775.2515 8477.9805 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7775.4448 8477.8906 m-7775.4448 8478.3193 -7775.73 8478.667 -7776.0811 8478.667 c-7776.4331 8478.667 -7776.7178 8478.3193 -7776.7178 8477.8906 c-7776.7178 8477.4609 -7776.4331 8477.1133 -7776.0811 8477.1133 c-7775.73 8477.1133 -7775.4448 8477.4609 -7775.4448 8477.8906 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7775.6387 8477.8008 m-7775.6387 8477.8789 -7775.7969 8477.9414 -7775.9912 8477.9414 c-7776.1865 8477.9414 -7776.3438 8477.8789 -7776.3438 8477.8008 c-7776.3438 8477.7227 -7776.1865 8477.6592 -7775.9912 8477.6592 c-7775.7969 8477.6592 -7775.6387 8477.7227 -7775.6387 8477.8008 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7775.8325 8477.7109 m-7775.8325 8477.5723 -7775.8638 8477.4609 -7775.9009 8477.4609 c-7775.9395 8477.4609 -7775.9697 8477.5723 -7775.9697 8477.7109 c-7775.9697 8477.8477 -7775.9395 8477.96 -7775.9009 8477.96 c-7775.8638 8477.96 -7775.8325 8477.8477 -7775.8325 8477.7109 cfUu1 Ap0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7785.54 8478.5186 m-7785.54 8479.752 -7786.5386 8480.75 -7787.7695 8480.75 c-7789.0015 8480.75 -7790 8479.752 -7790 8478.5186 c-7790 8477.2881 -7789.0015 8476.291 -7787.7695 8476.291 c-7786.5386 8476.291 -7785.54 8477.2881 -7785.54 8478.5186 cf0 Ap0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7785.6875 8478.4434 m-7785.6875 8479.5498 -7786.5854 8480.4492 -7787.6934 8480.4492 c-7788.8013 8480.4492 -7789.6992 8479.5498 -7789.6992 8478.4434 c-7789.6992 8477.3359 -7788.8013 8476.4375 -7787.6934 8476.4375 c-7786.5854 8476.4375 -7785.6875 8477.3359 -7785.6875 8478.4434 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7785.8354 8478.3672 m-7785.8354 8479.3516 -7786.6333 8480.1484 -7787.6167 8480.1484 c-7788.6011 8480.1484 -7789.3984 8479.3516 -7789.3984 8478.3672 c-7789.3984 8477.3818 -7788.6011 8476.585 -7787.6167 8476.585 c-7786.6333 8476.585 -7785.8354 8477.3818 -7785.8354 8478.3672 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7785.9829 8478.291 m-7785.9829 8479.1504 -7786.6802 8479.8477 -7787.54 8479.8477 c-7788.4009 8479.8477 -7789.0972 8479.1504 -7789.0972 8478.291 c-7789.0972 8477.4297 -7788.4009 8476.7344 -7787.54 8476.7344 c-7786.6802 8476.7344 -7785.9829 8477.4297 -7785.9829 8478.291 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7786.1313 8478.2139 m-7786.1313 8478.9502 -7786.7275 8479.5469 -7787.4639 8479.5469 c-7788.2002 8479.5469 -7788.7969 8478.9502 -7788.7969 8478.2139 c-7788.7969 8477.4775 -7788.2002 8476.8809 -7787.4639 8476.8809 c-7786.7275 8476.8809 -7786.1313 8477.4775 -7786.1313 8478.2139 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7786.2788 8478.1367 m-7786.2788 8478.75 -7786.7749 8479.2461 -7787.3872 8479.2461 c-7788 8479.2461 -7788.4961 8478.75 -7788.4961 8478.1367 c-7788.4961 8477.5254 -7788 8477.0293 -7787.3872 8477.0293 c-7786.7749 8477.0293 -7786.2788 8477.5254 -7786.2788 8478.1367 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7786.4268 8478.0605 m-7786.4268 8478.5498 -7786.8223 8478.9453 -7787.3115 8478.9453 c-7787.7998 8478.9453 -7788.1958 8478.5498 -7788.1958 8478.0605 c-7788.1958 8477.5723 -7787.7998 8477.1758 -7787.3115 8477.1758 c-7786.8223 8477.1758 -7786.4268 8477.5723 -7786.4268 8478.0605 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7786.5737 8477.9834 m-7786.5737 8478.3496 -7786.8696 8478.6445 -7787.2344 8478.6445 c-7787.5996 8478.6445 -7787.8955 8478.3496 -7787.8955 8477.9834 c-7787.8955 8477.6191 -7787.5996 8477.3242 -7787.2344 8477.3242 c-7786.8696 8477.3242 -7786.5737 8477.6191 -7786.5737 8477.9834 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7786.7217 8477.9082 m-7786.7217 8478.1484 -7786.9175 8478.3438 -7787.1582 8478.3438 c-7787.3989 8478.3438 -7787.5942 8478.1484 -7787.5942 8477.9082 c-7787.5942 8477.667 -7787.3989 8477.4727 -7787.1582 8477.4727 c-7786.9175 8477.4727 -7786.7217 8477.667 -7786.7217 8477.9082 cf1 Ap0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7786.8696 8477.832 m-7786.8696 8477.9482 -7786.9648 8478.0439 -7787.0811 8478.0439 c-7787.1987 8478.0439 -7787.2935 8477.9482 -7787.2935 8477.832 c-7787.2935 8477.7148 -7787.1987 8477.6191 -7787.0811 8477.6191 c-7786.9648 8477.6191 -7786.8696 8477.7148 -7786.8696 8477.832 cfU/ShapeBlendPathType (K) XT/ShapeBlendPathID (A) XTUuu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7697.3481 8478.5186 m-7697.3481 8480.6191 -7695.6465 8482.3223 -7693.5454 8482.3223 c-7691.4458 8482.3223 -7689.7437 8480.6191 -7689.7437 8478.5186 c-7689.7437 8476.4199 -7691.4458 8474.7178 -7693.5454 8474.7178 c-7695.6465 8474.7178 -7697.3481 8476.4199 -7697.3481 8478.5186 cf0 Ap0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7690.3364 8478.3896 m-7690.3364 8476.5 -7691.8315 8474.9697 -7693.6763 8474.9697 c-7695.52 8474.9697 -7697.0161 8476.5 -7697.0161 8478.3896 c-7697.0161 8480.2783 -7695.52 8481.8096 -7693.6763 8481.8096 c-7691.8315 8481.8096 -7690.3364 8480.2783 -7690.3364 8478.3896 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7690.9292 8478.2578 m-7690.9292 8476.5811 -7692.2173 8475.2217 -7693.8071 8475.2217 c-7695.3955 8475.2217 -7696.6831 8476.5811 -7696.6831 8478.2578 c-7696.6831 8479.9375 -7695.3955 8481.2969 -7693.8071 8481.2969 c-7692.2173 8481.2969 -7690.9292 8479.9375 -7690.9292 8478.2578 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7691.5225 8478.1289 m-7691.5225 8476.6621 -7692.6035 8475.4736 -7693.9375 8475.4736 c-7695.27 8475.4736 -7696.3511 8476.6621 -7696.3511 8478.1289 c-7696.3511 8479.5957 -7695.27 8480.7842 -7693.9375 8480.7842 c-7692.6035 8480.7842 -7691.5225 8479.5957 -7691.5225 8478.1289 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7692.1157 8477.998 m-7692.1157 8476.7422 -7692.9888 8475.7256 -7694.0669 8475.7256 c-7695.1455 8475.7256 -7696.0195 8476.7422 -7696.0195 8477.998 c-7696.0195 8479.2529 -7695.1455 8480.2705 -7694.0669 8480.2705 c-7692.9888 8480.2705 -7692.1157 8479.2529 -7692.1157 8477.998 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7692.7085 8477.8672 m-7692.7085 8476.8242 -7693.3755 8475.9775 -7694.1978 8475.9775 c-7695.02 8475.9775 -7695.6875 8476.8242 -7695.6875 8477.8672 c-7695.6875 8478.9121 -7695.02 8479.7578 -7694.1978 8479.7578 c-7693.3755 8479.7578 -7692.7085 8478.9121 -7692.7085 8477.8672 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7693.3013 8477.7373 m-7693.3013 8476.9033 -7693.7612 8476.2295 -7694.3276 8476.2295 c-7694.8955 8476.2295 -7695.3545 8476.9033 -7695.3545 8477.7373 c-7695.3545 8478.5703 -7694.8955 8479.2461 -7694.3276 8479.2461 c-7693.7612 8479.2461 -7693.3013 8478.5703 -7693.3013 8477.7373 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7693.8955 8477.6074 m-7693.8955 8476.9854 -7694.1475 8476.4814 -7694.4585 8476.4814 c-7694.77 8476.4814 -7695.0225 8476.9854 -7695.0225 8477.6074 c-7695.0225 8478.2285 -7694.77 8478.7324 -7694.4585 8478.7324 c-7694.1475 8478.7324 -7693.8955 8478.2285 -7693.8955 8477.6074 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7694.4868 8477.4766 m-7694.4868 8477.0664 -7694.5327 8476.7324 -7694.5894 8476.7324 c-7694.6455 8476.7324 -7694.6899 8477.0664 -7694.6899 8477.4766 c-7694.6899 8477.8857 -7694.6455 8478.2207 -7694.5894 8478.2207 c-7694.5327 8478.2207 -7694.4868 8477.8857 -7694.4868 8477.4766 cf1 Ap0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7695.0806 8477.3457 m-7695.0806 8477.5449 -7694.9185 8477.708 -7694.7192 8477.708 c-7694.52 8477.708 -7694.3579 8477.5449 -7694.3579 8477.3457 c-7694.3579 8477.1465 -7694.52 8476.9854 -7694.7192 8476.9854 c-7694.9185 8476.9854 -7695.0806 8477.1465 -7695.0806 8477.3457 cfU/ShapeBlendPathType (K) XT/ShapeBlendPathID (B) XTu0 Ap0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7685.8955 8478.5186 m-7685.8955 8480.4023 -7684.3696 8481.9297 -7682.4868 8481.9297 c-7680.6045 8481.9297 -7679.0776 8480.4023 -7679.0776 8478.5186 c-7679.0776 8476.6367 -7680.6045 8475.1113 -7682.4868 8475.1113 c-7684.3696 8475.1113 -7685.8955 8476.6367 -7685.8955 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7685.6099 8478.4033 m-7685.6099 8480.0967 -7684.2642 8481.4697 -7682.6045 8481.4697 c-7680.9438 8481.4697 -7679.5981 8480.0967 -7679.5981 8478.4033 c-7679.5981 8476.709 -7680.9438 8475.3369 -7682.6045 8475.3369 c-7684.2642 8475.3369 -7685.6099 8476.709 -7685.6099 8478.4033 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7685.3237 8478.2842 m-7685.3237 8479.791 -7684.1577 8481.0098 -7682.7212 8481.0098 c-7681.2827 8481.0098 -7680.1177 8479.791 -7680.1177 8478.2842 c-7680.1177 8476.7813 -7681.2827 8475.5625 -7682.7212 8475.5625 c-7684.1577 8475.5625 -7685.3237 8476.7813 -7685.3237 8478.2842 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7685.0376 8478.168 m-7685.0376 8479.4844 -7684.0532 8480.5498 -7682.8384 8480.5498 c-7681.6216 8480.5498 -7680.6372 8479.4844 -7680.6372 8478.168 c-7680.6372 8476.8535 -7681.6216 8475.7891 -7682.8384 8475.7891 c-7684.0532 8475.7891 -7685.0376 8476.8535 -7685.0376 8478.168 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7684.7515 8478.0518 m-7684.7515 8479.1777 -7683.9468 8480.0898 -7682.9546 8480.0898 c-7681.9614 8480.0898 -7681.1567 8479.1777 -7681.1567 8478.0518 c-7681.1567 8476.9258 -7681.9614 8476.0146 -7682.9546 8476.0146 c-7683.9468 8476.0146 -7684.7515 8476.9258 -7684.7515 8478.0518 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7684.4653 8477.9346 m-7684.4653 8478.8711 -7683.8413 8479.6309 -7683.0718 8479.6309 c-7682.3013 8479.6309 -7681.6772 8478.8711 -7681.6772 8477.9346 c-7681.6772 8476.999 -7682.3013 8476.2402 -7683.0718 8476.2402 c-7683.8413 8476.2402 -7684.4653 8476.999 -7684.4653 8477.9346 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7684.1792 8477.8184 m-7684.1792 8478.5645 -7683.7358 8479.1689 -7683.1885 8479.1689 c-7682.6411 8479.1689 -7682.1968 8478.5645 -7682.1968 8477.8184 c-7682.1968 8477.0723 -7682.6411 8476.4668 -7683.1885 8476.4668 c-7683.7358 8476.4668 -7684.1792 8477.0723 -7684.1792 8477.8184 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7683.8931 8477.7002 m-7683.8931 8478.0762 -7683.6304 8478.3809 -7683.3052 8478.3809 c-7682.9814 8478.3809 -7682.7173 8478.0762 -7682.7173 8477.7002 c-7682.7173 8477.3262 -7682.9814 8477.0225 -7683.3052 8477.0225 c-7683.6304 8477.0225 -7683.8931 8477.3262 -7683.8931 8477.7002 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7683.6079 8477.584 m-7683.6079 8477.9521 -7683.5239 8478.252 -7683.4224 8478.252 c-7683.3198 8478.252 -7683.2368 8477.9521 -7683.2368 8477.584 c-7683.2368 8477.2158 -7683.3198 8476.918 -7683.4224 8476.918 c-7683.5239 8476.918 -7683.6079 8477.2158 -7683.6079 8477.584 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7683.3208 8477.4668 m-7683.3208 8477.2891 -7683.4185 8477.1445 -7683.5396 8477.1445 c-7683.6597 8477.1445 -7683.7573 8477.2891 -7683.7573 8477.4668 c-7683.7573 8477.6465 -7683.6597 8477.792 -7683.5396 8477.792 c-7683.4185 8477.792 -7683.3208 8477.6465 -7683.3208 8477.4668 cfUu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7674.4438 8478.5186 m-7674.4438 8480.1855 -7673.0942 8481.5352 -7671.4282 8481.5352 c-7669.7622 8481.5352 -7668.4116 8480.1855 -7668.4116 8478.5186 c-7668.4116 8476.8535 -7669.7622 8475.5039 -7671.4282 8475.5039 c-7673.0942 8475.5039 -7674.4438 8476.8535 -7674.4438 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7674.2036 8478.416 m-7674.2036 8479.9141 -7673.0073 8481.1289 -7671.5317 8481.1289 c-7670.0552 8481.1289 -7668.8589 8479.9141 -7668.8589 8478.416 c-7668.8589 8476.918 -7670.0552 8475.7041 -7671.5317 8475.7041 c-7673.0073 8475.7041 -7674.2036 8476.918 -7674.2036 8478.416 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7673.9634 8478.3125 m-7673.9634 8479.6445 -7672.9204 8480.7227 -7671.6353 8480.7227 c-7670.3481 8480.7227 -7669.3052 8479.6445 -7669.3052 8478.3125 c-7669.3052 8476.9824 -7670.3481 8475.9033 -7671.6353 8475.9033 c-7672.9204 8475.9033 -7673.9634 8476.9824 -7673.9634 8478.3125 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7673.7241 8478.209 m-7673.7241 8479.373 -7672.8354 8480.3164 -7671.7388 8480.3164 c-7670.6411 8480.3164 -7669.7524 8479.373 -7669.7524 8478.209 c-7669.7524 8477.0469 -7670.6411 8476.1025 -7671.7388 8476.1025 c-7672.8354 8476.1025 -7673.7241 8477.0469 -7673.7241 8478.209 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7673.4839 8478.1055 m-7673.4839 8479.1016 -7672.7485 8479.9082 -7671.8423 8479.9082 c-7670.9341 8479.9082 -7670.1997 8479.1016 -7670.1997 8478.1055 c-7670.1997 8477.1094 -7670.9341 8476.3018 -7671.8423 8476.3018 c-7672.7485 8476.3018 -7673.4839 8477.1094 -7673.4839 8478.1055 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7673.2446 8478.002 m-7673.2446 8478.8311 -7672.6626 8479.502 -7671.9458 8479.502 c-7671.2285 8479.502 -7670.6465 8478.8311 -7670.6465 8478.002 c-7670.6465 8477.1738 -7671.2285 8476.5039 -7671.9458 8476.5039 c-7672.6626 8476.5039 -7673.2446 8477.1738 -7673.2446 8478.002 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7673.0044 8477.8984 m-7673.0044 8478.5605 -7672.5767 8479.0957 -7672.0483 8479.0957 c-7671.5215 8479.0957 -7671.0923 8478.5605 -7671.0923 8477.8984 c-7671.0923 8477.2383 -7671.5215 8476.7031 -7672.0483 8476.7031 c-7672.5767 8476.7031 -7673.0044 8477.2383 -7673.0044 8477.8984 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7672.7642 8477.7959 m-7672.7642 8477.9238 -7672.4907 8478.0293 -7672.1519 8478.0293 c-7671.8145 8478.0293 -7671.5396 8477.9238 -7671.5396 8477.7959 c-7671.5396 8477.668 -7671.8145 8477.5625 -7672.1519 8477.5625 c-7672.4907 8477.5625 -7672.7642 8477.668 -7672.7642 8477.7959 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7672.5239 8477.6924 m-7672.5239 8478.0176 -7672.4038 8478.2832 -7672.2554 8478.2832 c-7672.1069 8478.2832 -7671.9868 8478.0176 -7671.9868 8477.6924 c-7671.9868 8477.3672 -7672.1069 8477.1025 -7672.2554 8477.1025 c-7672.4038 8477.1025 -7672.5239 8477.3672 -7672.5239 8477.6924 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7672.2837 8477.5889 m-7672.2837 8477.4316 -7672.3179 8477.3018 -7672.3589 8477.3018 c-7672.3999 8477.3018 -7672.4341 8477.4316 -7672.4341 8477.5889 c-7672.4341 8477.748 -7672.3999 8477.876 -7672.3589 8477.876 c-7672.3179 8477.876 -7672.2837 8477.748 -7672.2837 8477.5889 cfUu0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7662.9917 8478.5186 m-7662.9917 8479.9688 -7661.8179 8481.1426 -7660.3696 8481.1426 c-7658.9204 8481.1426 -7657.7466 8479.9688 -7657.7466 8478.5186 c-7657.7466 8477.0703 -7658.9204 8475.8975 -7660.3696 8475.8975 c-7661.8179 8475.8975 -7662.9917 8477.0703 -7662.9917 8478.5186 cf0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7662.7974 8478.4297 m-7662.7974 8479.7324 -7661.7505 8480.7891 -7660.4595 8480.7891 c-7659.1665 8480.7891 -7658.1196 8479.7324 -7658.1196 8478.4297 c-7658.1196 8477.127 -7659.1665 8476.0703 -7660.4595 8476.0703 c-7661.7505 8476.0703 -7662.7974 8477.127 -7662.7974 8478.4297 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7662.6045 8478.3398 m-7662.6045 8479.498 -7661.6841 8480.4346 -7660.5493 8480.4346 c-7659.4136 8480.4346 -7658.4937 8479.498 -7658.4937 8478.3398 c-7658.4937 8477.1826 -7659.4136 8476.2441 -7660.5493 8476.2441 c-7661.6841 8476.2441 -7662.6045 8477.1826 -7662.6045 8478.3398 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7662.4106 8478.25 m-7662.4106 8479.2617 -7661.6177 8480.082 -7660.6392 8480.082 c-7659.6606 8480.082 -7658.8677 8479.2617 -7658.8677 8478.25 c-7658.8677 8477.2383 -7659.6606 8476.4189 -7660.6392 8476.4189 c-7661.6177 8476.4189 -7662.4106 8477.2383 -7662.4106 8478.25 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7662.2163 8478.1602 m-7662.2163 8479.0254 -7661.5513 8479.7285 -7660.7295 8479.7285 c-7659.9067 8479.7285 -7659.2407 8479.0254 -7659.2407 8478.1602 c-7659.2407 8477.293 -7659.9067 8476.5918 -7660.7295 8476.5918 c-7661.5513 8476.5918 -7662.2163 8477.293 -7662.2163 8478.1602 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7662.0229 8478.0703 m-7662.0229 8478.791 -7661.4839 8479.375 -7660.8188 8479.375 c-7660.1538 8479.375 -7659.6157 8478.791 -7659.6157 8478.0703 c-7659.6157 8477.3496 -7660.1538 8476.7656 -7660.8188 8476.7656 c-7661.4839 8476.7656 -7662.0229 8477.3496 -7662.0229 8478.0703 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7661.8286 8477.9805 m-7661.8286 8478.5537 -7661.4165 8479.0205 -7660.9087 8479.0205 c-7660.4009 8479.0205 -7659.9888 8478.5537 -7659.9888 8477.9805 c-7659.9888 8477.4063 -7660.4009 8476.9395 -7660.9087 8476.9395 c-7661.4165 8476.9395 -7661.8286 8477.4063 -7661.8286 8477.9805 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7661.6353 8477.8906 m-7661.6353 8477.7705 -7661.3501 8477.6758 -7660.9985 8477.6758 c-7660.6475 8477.6758 -7660.3618 8477.7705 -7660.3618 8477.8906 c-7660.3618 8478.0078 -7660.6475 8478.1025 -7660.9985 8478.1025 c-7661.3501 8478.1025 -7661.6353 8478.0078 -7661.6353 8477.8906 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7661.4419 8477.8008 m-7661.4419 8478.084 -7661.2837 8478.3135 -7661.0884 8478.3135 c-7660.8945 8478.3135 -7660.7368 8478.084 -7660.7368 8477.8008 c-7660.7368 8477.5166 -7660.8945 8477.2871 -7661.0884 8477.2871 c-7661.2837 8477.2871 -7661.4419 8477.5166 -7661.4419 8477.8008 cf0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7661.2476 8477.7109 m-7661.2476 8477.5723 -7661.2173 8477.4609 -7661.1792 8477.4609 c-7661.1411 8477.4609 -7661.1099 8477.5723 -7661.1099 8477.7109 c-7661.1099 8477.8477 -7661.1411 8477.96 -7661.1792 8477.96 c-7661.2173 8477.96 -7661.2476 8477.8477 -7661.2476 8477.7109 cfUu1 Ap0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa-7651.5396 8478.5186 m-7651.5396 8479.752 -7650.5415 8480.75 -7649.3115 8480.75 c-7648.0786 8480.75 -7647.0806 8479.752 -7647.0806 8478.5186 c-7647.0806 8477.2881 -7648.0786 8476.291 -7649.3115 8476.291 c-7650.5415 8476.291 -7651.5396 8477.2881 -7651.5396 8478.5186 cf0 Ap0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa-7651.3921 8478.4434 m-7651.3921 8479.5498 -7650.4946 8480.4492 -7649.3872 8480.4492 c-7648.2788 8480.4492 -7647.3813 8479.5498 -7647.3813 8478.4434 c-7647.3813 8477.3359 -7648.2788 8476.4375 -7649.3872 8476.4375 c-7650.4946 8476.4375 -7651.3921 8477.3359 -7651.3921 8478.4434 cf0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa-7651.2446 8478.3672 m-7651.2446 8479.3516 -7650.4468 8480.1484 -7649.4634 8480.1484 c-7648.4795 8480.1484 -7647.6821 8479.3516 -7647.6821 8478.3672 c-7647.6821 8477.3818 -7648.4795 8476.585 -7649.4634 8476.585 c-7650.4468 8476.585 -7651.2446 8477.3818 -7651.2446 8478.3672 cf0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa-7651.0972 8478.291 m-7651.0972 8479.1504 -7650.3999 8479.8477 -7649.5396 8479.8477 c-7648.6792 8479.8477 -7647.9829 8479.1504 -7647.9829 8478.291 c-7647.9829 8477.4297 -7648.6792 8476.7344 -7649.5396 8476.7344 c-7650.3999 8476.7344 -7651.0972 8477.4297 -7651.0972 8478.291 cf0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa-7650.9487 8478.2139 m-7650.9487 8478.9502 -7650.3521 8479.5469 -7649.6157 8479.5469 c-7648.8794 8479.5469 -7648.2837 8478.9502 -7648.2837 8478.2139 c-7648.2837 8477.4775 -7648.8794 8476.8809 -7649.6157 8476.8809 c-7650.3521 8476.8809 -7650.9487 8477.4775 -7650.9487 8478.2139 cf0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa-7650.8013 8478.1367 m-7650.8013 8478.75 -7650.3052 8479.2461 -7649.6929 8479.2461 c-7649.0806 8479.2461 -7648.5845 8478.75 -7648.5845 8478.1367 c-7648.5845 8477.5254 -7649.0806 8477.0293 -7649.6929 8477.0293 c-7650.3052 8477.0293 -7650.8013 8477.5254 -7650.8013 8478.1367 cf0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa-7650.6528 8478.0605 m-7650.6528 8478.5498 -7650.2583 8478.9453 -7649.7695 8478.9453 c-7649.2798 8478.9453 -7648.8843 8478.5498 -7648.8843 8478.0605 c-7648.8843 8477.5723 -7649.2798 8477.1758 -7649.7695 8477.1758 c-7650.2583 8477.1758 -7650.6528 8477.5723 -7650.6528 8478.0605 cf0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa-7650.5063 8477.9834 m-7650.5063 8478.3496 -7650.2104 8478.6445 -7649.8462 8478.6445 c-7649.4814 8478.6445 -7649.1851 8478.3496 -7649.1851 8477.9834 c-7649.1851 8477.6191 -7649.4814 8477.3242 -7649.8462 8477.3242 c-7650.2104 8477.3242 -7650.5063 8477.6191 -7650.5063 8477.9834 cf0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa-7650.3579 8477.9082 m-7650.3579 8478.1484 -7650.1626 8478.3438 -7649.9224 8478.3438 c-7649.6812 8478.3438 -7649.4858 8478.1484 -7649.4858 8477.9082 c-7649.4858 8477.667 -7649.6812 8477.4727 -7649.9224 8477.4727 c-7650.1626 8477.4727 -7650.3579 8477.667 -7650.3579 8477.9082 cf1 Ap0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa-7650.2104 8477.832 m-7650.2104 8477.9482 -7650.1157 8478.0439 -7649.9985 8478.0439 c-7649.8813 8478.0439 -7649.7866 8477.9482 -7649.7866 8477.832 c-7649.7866 8477.7148 -7649.8813 8477.6191 -7649.9985 8477.6191 c-7650.1157 8477.6191 -7650.2104 8477.7148 -7650.2104 8477.832 cfU/ShapeBlendPathType (K) XT/ShapeBlendPathID (A) XTU0 Ap-7704.3306 8478.4727 m-7704.3306 8479.8008 -7710.7075 8481.2813 -7719.8589 8481.2813 c-7729.0103 8481.2813 -7735.3892 8479.8008 -7735.3892 8478.4727 C-7735.8843 8478.4727 L-7735.8843 8480.6191 -7727.6284 8481.7773 -7719.8589 8481.7773 c-7712.0903 8481.7773 -7702.1138 8480.6191 -7702.1138 8478.4727 C-7704.3306 8478.4727 Lf-7730.3296 8465.4023 m-7729.0415 8466.6914 L-7728.6772 8466.3281 -7728.2485 8465.6641 -7725.4966 8467.5234 c-7722.9946 8469.2129 -7719.9814 8471.7793 -7717.0122 8474.748 c-7714.0435 8477.7168 -7711.4771 8480.7305 -7709.7856 8483.2314 c-7707.9272 8485.9834 -7707.6548 8487.3516 -7708.0161 8487.7148 C-7707.6665 8488.0654 L-7706.1489 8486.5469 -7711.1685 8479.8906 -7716.6626 8474.3984 c-7719.6519 8471.4063 -7722.6919 8468.8193 -7725.2192 8467.1113 c-7727.9204 8465.2871 -7729.6392 8464.7129 -7730.3296 8465.4023 Cf-7707.2695 8466.1689 m-7706.9067 8466.5322 -7707.1802 8467.9004 -7709.0396 8470.6514 c-7710.7295 8473.1543 -7713.2954 8476.168 -7716.2642 8479.1367 c-7722.7358 8485.6094 -7727.5884 8488.3682 -7728.5278 8487.4277 C-7729.5815 8488.4824 L-7728.0649 8490 -7719.5298 8483.1025 -7715.9146 8479.4863 c-7712.9243 8476.4971 -7710.3364 8473.457 -7708.6294 8470.9297 c-7706.8042 8468.2285 -7706.2295 8466.5098 -7706.9185 8465.8193 C-7707.2695 8466.1689 LfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Text Divider/ Adobe ArtOnPath Brush Tool/ T) -(apered Stroke/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 2/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Text Divider)(1 / Unnamed Brush Pattern 6/ / / / / 5 0.176471 0.027451 0.247) -(059 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0.000031 0.000031 0.000031 0.000031 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0.000031 0.993988 1 0.000031 1 0 0 Xa(RGB Red)Pc0.061982 0.000031 0.965148 0.000031 1 1 0 Xa(RGB Yellow)Pc0.627649 0.000031 1 0.000031 0 1 0 Xa(RGB Green)Pc0.517937 0.000031 0.125399 0.000031 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0.000031 0.000031 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0.000031 0.000031 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0.000031 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0.000031 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0.000031 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0.000031 0.931884 0.000031 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0.000031 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0.000031 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0.000031 0.749783 0.000031 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0.000031 0.000031 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0.000031 0.000031 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0.000031 0.970001 0.204959 0.000031 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0.000031 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Fade to White) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to White)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Green Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green Gradient)PcBb0 0 0 0 Bh2 (Blue Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Blue Radial Gradient)Pc(Squares Angled) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Squares Angled)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0.000031 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0.000031 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0.000031 0.000031 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0.000031 0.508354 0.961639 0.000031 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0.000031 0.965057 0.900572 0.000031 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0.000031 0.661738 0.032776 0.000031 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0.000031 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Auu0 O0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa0 J 0 j 1 w 4 M []0 d0 XR502.71 334.7461 m502.71 284.9258 L0 284.9258 L0 334.7461 L502.71 334.7461 LfUu0 R0.75021 0.679683 0.670222 0.90164 0 0 0 XA0 334.7461 m502.71 334.7461 L502.71 284.9258 L0 284.9258 L0 334.7461 LsUU0 O0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa0 89.8506 m800 89.8506 l800 0 l0 0 l0 89.8506 lb0.000031 0.000031 0.000031 0.000031 1 1 1 Xa95.1138 1454.9795 m95.1138 1311.9424 lB0 44.9746 m800 44.9746 LS-0.000488 0 m800 0 LS118.334 89.8506 m118.334 44.9746 LS573.001 89.8506 m573.001 44.9746 LS229.6675 89.8506 m229.6675 44.9746 LS462.334 89.8506 m462.334 44.9746 LS343.001 89.8506 m343.001 44.9746 LS40.3345 44.9746 m40.3345 0.098633 LS685.001 89.8506 m685.001 44.9746 LS392.3345 44.9746 m392.3345 0.098633 LS271.6675 44.9746 m271.6675 0.098633 LS150.3345 44.9746 m150.3345 0.098633 LS763.668 44.9746 m763.668 0.098633 LS526.334 44.9746 m526.334 0.098633 LS644.001 44.9746 m644.001 0.098633 LS0 O0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa0 600 m800 600 l800 510.1494 l0 510.1494 l0 600 lb0 555.124 m800 555.124 LS-0.000488 510.1494 m800 510.1494 LS118.334 600 m118.334 555.124 LS573.001 600 m573.001 555.124 LS229.6675 600 m229.6675 555.124 LS462.334 600 m462.334 555.124 LS343.001 600 m343.001 555.124 LS40.3345 555.124 m40.3345 510.248 LS685.001 600 m685.001 555.124 LS392.3345 555.124 m392.3345 510.248 LS271.6675 555.124 m271.6675 510.248 LS150.3345 555.124 m150.3345 510.248 LS763.668 555.124 m763.668 510.248 LS526.334 555.124 m526.334 510.248 LS644.001 555.124 m644.001 510.248 LS40.3345 334.7466 m40.3345 284.9258 LS150.3345 334.4136 m150.3345 284.5938 LS271.6675 334.4136 m271.6675 284.5938 LS392.3345 334.7466 m392.3345 284.9258 LSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF